
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'AFC7E3012C057A927C551AE877118D0F'
    
_lr_action_items = {'{':([0,1,2,4,7,8,9,12,14,16,19,22,24,26,29,32,33,34,35,42,43,44,51,68,71,72,73,76,77,78,82,83,85,106,115,119,127,128,132,133,134,135,138,139,140,142,143,144,146,147,148,149,],[2,-23,-9,-26,-5,-6,2,-22,-20,-18,2,-24,-25,-19,-17,-7,-21,-3,2,2,-16,-40,-27,-2,2,-11,-41,-8,2,-10,-29,-28,-15,-39,-30,-42,2,2,-31,2,2,2,-38,-34,-32,-37,-36,-76,2,2,-35,-33,]),'-':([11,15,20,21,23,30,31,40,41,46,66,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,113,114,125,130,131,141,],[-48,59,-47,-49,-45,-44,-46,59,-47,59,59,-69,-68,59,59,-50,59,-54,59,59,59,59,59,59,-51,-53,59,59,59,-52,59,59,59,59,59,-70,-71,59,]),'REPEAT':([0,1,2,4,7,8,9,12,14,16,19,22,24,26,29,32,33,34,35,42,43,44,51,68,71,72,73,76,77,78,82,83,85,106,115,119,127,128,132,133,134,138,139,140,142,143,144,146,147,148,149,],[9,-23,-9,-26,-5,-6,9,-22,-20,-18,9,-24,-25,-19,-17,-7,-21,-3,9,9,-16,-40,-27,-2,9,-11,-41,-8,9,-10,-29,-28,-15,-39,-30,-42,9,9,-31,9,9,-38,-34,-32,-37,-36,-76,9,9,-35,-33,]),'CONTINUE':([0,1,2,4,7,8,9,12,14,16,19,22,24,26,29,32,33,34,35,42,43,44,51,68,71,72,73,76,77,78,82,83,85,106,115,119,127,128,132,133,134,138,139,140,142,143,144,146,147,148,149,],[10,-23,-9,-26,-5,-6,10,-22,-20,-18,10,-24,-25,-19,-17,-7,-21,-3,10,10,-16,-40,-27,-2,10,-11,-41,-8,10,-10,-29,-28,-15,-39,-30,-42,10,10,-31,10,10,-38,-34,-32,-37,-36,-76,10,10,-35,-33,]),'FLOAT':([0,1,2,4,6,7,8,9,12,13,14,16,17,19,22,24,26,29,32,33,34,35,42,43,44,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,76,77,78,81,82,83,84,85,106,115,119,127,128,129,132,133,134,138,139,140,142,143,144,146,147,148,149,],[23,-23,-9,-26,23,-5,-6,23,-22,23,-20,-18,23,23,-24,-25,-19,-17,-7,-21,-3,23,23,-16,-40,23,23,23,23,-27,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-2,23,23,23,-11,-41,23,-8,23,-10,23,-29,-28,23,-15,-39,-30,-42,23,23,23,-31,23,23,-38,-34,-32,-37,-36,-76,23,23,-35,-33,]),'IF':([0,1,2,4,7,8,9,12,14,16,19,22,24,26,29,32,33,34,35,42,43,44,51,68,71,72,73,76,77,78,82,83,85,106,115,119,127,128,132,133,134,138,139,140,142,143,144,146,147,148,149,],[18,-23,-9,-26,-5,-6,18,-22,-20,-18,18,-24,-25,-19,-17,-7,-21,-3,18,18,-16,-40,-27,-2,18,-11,-41,-8,18,-10,-29,-28,-15,-39,-30,-42,18,18,-31,18,18,-38,-34,-32,-37,-36,-76,18,18,-35,-33,]),'NEQ':([11,15,20,21,23,30,31,40,41,46,66,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,113,114,125,130,131,141,],[-48,50,-47,-49,-45,-44,-46,50,-47,50,50,-69,-68,None,None,-50,None,-54,-60,50,None,None,-61,50,-51,-53,50,None,50,-52,50,50,50,50,50,-70,-71,50,]),'TYPE':([0,1,2,4,7,8,12,14,16,19,22,24,26,29,32,33,34,35,44,51,68,72,73,76,78,80,82,83,106,115,119,132,137,138,139,140,142,143,144,148,149,],[5,-23,-9,-26,-5,-6,-22,-20,-18,5,-24,-25,-19,-17,-7,-21,-3,75,-40,-27,-2,-11,-41,-8,-10,123,-29,-28,-39,-30,-42,-31,123,-38,-34,-32,-37,-36,-76,-35,-33,]),'PRINT':([0,1,2,4,7,8,9,12,14,16,19,22,24,26,29,32,33,34,35,42,43,44,51,68,71,72,73,76,77,78,82,83,85,106,115,119,127,128,132,133,134,138,139,140,142,143,144,146,147,148,149,],[6,-23,-9,-26,-5,-6,6,-22,-20,-18,6,-24,-25,-19,-17,-7,-21,-3,6,6,-16,-40,-27,-2,6,-11,-41,-8,6,-10,-29,-28,-15,-39,-30,-42,6,6,-31,6,6,-38,-34,-32,-37,-36,-76,6,6,-35,-33,]),'%':([11,15,20,21,23,30,31,40,41,46,66,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,113,114,125,130,131,141,],[-48,52,-47,-49,-45,-44,-46,52,-47,52,52,-69,-68,52,52,52,52,-54,52,52,52,52,52,52,52,-53,52,52,52,-52,52,52,52,52,52,-70,-71,52,]),'BREAK':([0,1,2,4,7,8,9,12,14,16,19,22,24,26,29,32,33,34,35,42,43,44,51,68,71,72,73,76,77,78,82,83,85,106,115,119,127,128,132,133,134,138,139,140,142,143,144,146,147,148,149,],[27,-23,-9,-26,-5,-6,27,-22,-20,-18,27,-24,-25,-19,-17,-7,-21,-3,27,27,-16,-40,-27,-2,27,-11,-41,-8,27,-10,-29,-28,-15,-39,-30,-42,27,27,-31,27,27,-38,-34,-32,-37,-36,-76,27,27,-35,-33,]),')':([11,21,23,30,31,41,45,46,69,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,112,113,116,117,121,122,124,130,131,136,141,145,],[-48,-49,-45,-44,-46,-47,86,87,-73,-78,-69,-68,-66,-64,-50,-63,-54,-60,-57,-62,-65,-61,-59,-51,-53,-55,-67,-56,-52,-58,127,128,-43,-72,130,131,-75,133,134,-80,135,-77,-70,-71,-81,-74,-79,]),'EQ':([11,15,20,21,23,30,31,40,41,46,66,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,113,114,125,130,131,141,],[-48,55,-47,-49,-45,-44,-46,55,-47,55,55,-69,-68,None,None,-50,None,-54,-60,55,None,None,-61,55,-51,-53,55,None,55,-52,55,55,55,55,55,-70,-71,55,]),'<':([11,15,20,21,23,30,31,40,41,46,66,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,113,114,125,130,131,141,],[-48,56,-47,-49,-45,-44,-46,56,-47,56,56,-69,-68,None,None,-50,None,-54,-60,56,None,None,-61,56,-51,-53,56,None,56,-52,56,56,56,56,56,-70,-71,56,]),'OR':([11,15,20,21,23,30,31,40,41,46,66,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,113,114,125,130,131,141,],[-48,58,-47,-49,-45,-44,-46,58,-47,58,58,-69,-68,-66,-64,-50,-63,-54,-60,-57,-62,-65,-61,-59,-51,-53,-55,-67,-56,-52,-58,58,58,58,58,-70,-71,58,]),'>':([11,15,20,21,23,30,31,40,41,46,66,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,113,114,125,130,131,141,],[-48,48,-47,-49,-45,-44,-46,48,-47,48,48,-69,-68,None,None,-50,None,-54,-60,48,None,None,-61,48,-51,-53,48,None,48,-52,48,48,48,48,48,-70,-71,48,]),'|':([11,15,20,21,23,30,31,40,41,46,66,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,113,114,125,130,131,141,],[-48,61,-47,-49,-45,-44,-46,61,-47,61,61,-69,-68,-66,-64,-50,-63,-54,-60,-57,-62,-65,-61,61,-51,-53,-55,-67,-56,-52,61,61,61,61,61,-70,-71,61,]),'&':([11,15,20,21,23,30,31,40,41,46,66,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,113,114,125,130,131,141,],[-48,63,-47,-49,-45,-44,-46,63,-47,63,63,-69,-68,-66,-64,-50,-63,-54,-60,63,-62,-65,-61,63,-51,-53,63,-67,-56,-52,63,63,63,63,63,-70,-71,63,]),'GE':([11,15,20,21,23,30,31,40,41,46,66,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,113,114,125,130,131,141,],[-48,62,-47,-49,-45,-44,-46,62,-47,62,62,-69,-68,None,None,-50,None,-54,-60,62,None,None,-61,62,-51,-53,62,None,62,-52,62,62,62,62,62,-70,-71,62,]),'$end':([0,1,3,4,7,8,12,14,16,19,22,24,26,29,32,33,34,44,51,68,72,73,78,82,83,106,115,119,132,138,139,140,142,143,144,148,149,],[-4,-23,0,-26,-5,-6,-22,-20,-18,-1,-24,-25,-19,-17,-7,-21,-3,-40,-27,-2,-11,-41,-10,-29,-28,-39,-30,-42,-31,-38,-34,-32,-37,-36,-76,-35,-33,]),'*':([11,15,20,21,23,30,31,40,41,46,66,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,113,114,125,130,131,141,],[-48,64,-47,-49,-45,-44,-46,64,-47,64,64,-69,-68,64,64,64,64,-54,64,64,64,64,64,64,64,-53,64,64,64,-52,64,64,64,64,64,-70,-71,64,]),'}':([1,4,12,14,16,22,24,26,29,33,43,44,51,73,77,82,83,85,106,115,119,132,138,139,140,142,143,148,149,],[-23,-26,-22,-20,-18,-24,-25,-19,-17,-21,-16,-40,-27,-41,119,-29,-28,-15,-39,-30,-42,-31,-38,-34,-32,-37,-36,-35,-33,]),'LE':([11,15,20,21,23,30,31,40,41,46,66,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,113,114,125,130,131,141,],[-48,47,-47,-49,-45,-44,-46,47,-47,47,47,-69,-68,None,None,-50,None,-54,-60,47,None,None,-61,47,-51,-53,47,None,47,-52,47,47,47,47,47,-70,-71,47,]),'error':([0,1,2,4,6,7,8,12,13,14,16,19,22,24,26,29,32,33,34,35,44,51,67,68,69,72,73,74,76,78,82,83,106,115,119,132,138,139,140,142,143,144,148,149,],[25,-23,-9,-26,39,-5,-6,-22,45,-20,-18,25,-24,-25,-19,-17,-7,-21,-3,25,-40,-27,107,-2,112,-11,-41,116,-8,-10,-29,-28,-39,-30,-42,-31,-38,-34,-32,-37,-36,-76,-35,-33,]),'+':([11,15,20,21,23,30,31,40,41,46,66,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,113,114,125,130,131,141,],[-48,49,-47,-49,-45,-44,-46,49,-47,49,49,-69,-68,49,49,-50,49,-54,49,49,49,49,49,49,-51,-53,49,49,49,-52,49,49,49,49,49,-70,-71,49,]),'=':([20,38,118,],[70,81,81,]),'UNTIL':([1,4,12,14,16,22,24,26,29,33,42,43,44,51,73,82,83,85,106,115,119,132,138,139,140,142,143,148,149,],[-23,-26,-22,-20,-18,-24,-25,-19,-17,-21,84,-16,-40,-27,-41,-29,-28,-15,-39,-30,-42,-31,-38,-34,-32,-37,-36,-35,-33,]),':':([20,],[71,]),'ELSE':([1,4,12,14,16,22,24,26,29,33,44,51,73,82,83,106,115,119,132,138,139,140,142,143,148,149,],[-23,-26,-22,-20,-18,-24,-25,-19,-17,-21,-40,-27,-41,-29,-28,-39,-30,-42,-31,-38,146,147,-37,-36,-35,-33,]),'SHL':([11,15,20,21,23,30,31,40,41,46,66,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,113,114,125,130,131,141,],[-48,53,-47,-49,-45,-44,-46,53,-47,53,53,-69,-68,53,53,-50,53,-54,-60,53,53,53,-61,53,-51,-53,53,53,53,-52,53,53,53,53,53,-70,-71,53,]),'^':([11,15,20,21,23,30,31,40,41,46,66,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,113,114,125,130,131,141,],[-48,54,-47,-49,-45,-44,-46,54,-47,54,54,-69,-68,-66,-64,-50,-63,-54,-60,-57,-62,-65,-61,54,-51,-53,54,-67,-56,-52,54,54,54,54,54,-70,-71,54,]),'WHILE':([0,1,2,4,7,8,9,12,14,16,19,22,24,26,29,32,33,34,35,42,43,44,51,68,71,72,73,76,77,78,82,83,85,106,115,119,127,128,132,133,134,138,139,140,142,143,144,146,147,148,149,],[28,-23,-9,-26,-5,-6,28,-22,-20,-18,28,-24,-25,-19,-17,-7,-21,-3,28,28,-16,-40,-27,-2,28,-11,-41,-8,28,-10,-29,-28,-15,-39,-30,-42,28,28,-31,28,28,-38,-34,-32,-37,-36,-76,28,28,-35,-33,]),'(':([0,1,2,4,6,7,8,9,12,13,14,16,17,18,19,20,22,24,26,28,29,32,33,34,35,38,41,42,43,44,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,76,77,78,81,82,83,84,85,106,115,119,127,128,129,132,133,134,138,139,140,142,143,144,146,147,148,149,],[13,-23,-9,-26,13,-5,-6,13,-22,13,-20,-18,13,67,13,69,-24,-25,-19,74,-17,-7,-21,-3,13,80,69,13,-16,-40,13,13,13,13,-27,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-2,13,13,13,-11,-41,13,-8,13,-10,13,-29,-28,13,-15,-39,-30,-42,13,13,13,-31,13,13,-38,-34,-32,-37,-36,-76,13,13,-35,-33,]),'INTEGER':([0,1,2,4,6,7,8,9,12,13,14,16,17,19,22,24,26,29,32,33,34,35,42,43,44,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,76,77,78,81,82,83,84,85,106,115,119,127,128,129,132,133,134,138,139,140,142,143,144,146,147,148,149,],[30,-23,-9,-26,30,-5,-6,30,-22,30,-20,-18,30,30,-24,-25,-19,-17,-7,-21,-3,30,30,-16,-40,30,30,30,30,-27,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-2,30,30,30,-11,-41,30,-8,30,-10,30,-29,-28,30,-15,-39,-30,-42,30,30,30,-31,30,30,-38,-34,-32,-37,-36,-76,30,30,-35,-33,]),'SHR':([11,15,20,21,23,30,31,40,41,46,66,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,113,114,125,130,131,141,],[-48,57,-47,-49,-45,-44,-46,57,-47,57,57,-69,-68,57,57,-50,57,-54,-60,57,57,57,-61,57,-51,-53,57,57,57,-52,57,57,57,57,57,-70,-71,57,]),'/':([11,15,20,21,23,30,31,40,41,46,66,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,113,114,125,130,131,141,],[-48,60,-47,-49,-45,-44,-46,60,-47,60,60,-69,-68,60,60,60,60,-54,60,60,60,60,60,60,60,-53,60,60,60,-52,60,60,60,60,60,-70,-71,60,]),'ID':([0,1,2,4,5,6,7,8,9,12,13,14,16,17,19,22,24,26,29,32,33,34,35,42,43,44,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,106,115,119,123,127,128,129,132,133,134,138,139,140,142,143,144,146,147,148,149,],[20,-23,-9,-26,38,41,-5,-6,20,-22,41,-20,-18,41,20,-24,-25,-19,-17,-7,-21,-3,20,20,-16,-40,41,41,41,41,-27,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-2,41,41,20,-11,-41,41,118,-8,20,-10,118,41,-29,-28,41,-15,-39,-30,-42,136,20,20,41,-31,20,20,-38,-34,-32,-37,-36,-76,20,20,-35,-33,]),'RETURN':([0,1,2,4,7,8,9,12,14,16,19,22,24,26,29,32,33,34,35,42,43,44,51,68,71,72,73,76,77,78,82,83,85,106,115,119,127,128,132,133,134,138,139,140,142,143,144,146,147,148,149,],[17,-23,-9,-26,-5,-6,17,-22,-20,-18,17,-24,-25,-19,-17,-7,-21,-3,17,17,-16,-40,-27,-2,17,-11,-41,-8,17,-10,-29,-28,-15,-39,-30,-42,17,17,-31,17,17,-38,-34,-32,-37,-36,-76,17,17,-35,-33,]),'AND':([11,15,20,21,23,30,31,40,41,46,66,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,113,114,125,130,131,141,],[-48,65,-47,-49,-45,-44,-46,65,-47,65,65,-69,-68,-66,-64,-50,-63,-54,-60,-57,-62,-65,-61,65,-51,-53,-55,-67,-56,-52,-58,65,65,65,65,-70,-71,65,]),',':([11,21,23,30,31,36,37,41,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,110,113,120,121,124,125,130,131,136,141,145,],[-48,-49,-45,-44,-46,-13,79,-47,-69,-68,-66,-64,-50,-63,-54,-60,-57,-62,-65,-61,-59,-51,-53,-55,-67,-56,-52,-58,129,-75,-12,-80,137,-14,-70,-71,-81,-74,-79,]),';':([10,11,15,20,21,23,25,27,30,31,36,37,39,40,41,66,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,114,120,125,126,130,131,],[44,-48,51,-47,-49,-45,72,73,-44,-46,-13,78,82,83,-47,106,-69,-68,-66,-64,-50,-63,-54,-60,-57,-62,-65,-61,-59,-51,-53,-55,-67,-56,-52,-58,-43,132,-12,-14,138,-70,-71,]),'STRING':([0,1,2,4,6,7,8,9,12,13,14,16,17,19,22,24,26,29,32,33,34,35,42,43,44,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,76,77,78,81,82,83,84,85,106,115,119,127,128,129,132,133,134,138,139,140,142,143,144,146,147,148,149,],[31,-23,-9,-26,31,-5,-6,31,-22,31,-20,-18,31,31,-24,-25,-19,-17,-7,-21,-3,31,31,-16,-40,31,31,31,31,-27,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-2,31,31,31,-11,-41,31,-8,31,-10,31,-29,-28,31,-15,-39,-30,-42,31,31,31,-31,31,31,-38,-34,-32,-37,-36,-76,31,31,-35,-33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'return_instr':([0,9,19,35,42,71,77,127,128,133,134,146,147,],[1,1,1,1,1,1,1,1,1,1,1,1,1,]),'expr_list':([69,],[110,]),'program':([0,],[3,]),'compound_instr':([0,9,19,35,42,71,77,127,128,133,134,135,146,147,],[4,4,4,4,4,4,4,4,4,4,4,144,4,4,]),'break_instr':([0,9,19,35,42,71,77,127,128,133,134,146,147,],[22,22,22,22,22,22,22,22,22,22,22,22,22,]),'continue_instr':([0,9,19,35,42,71,77,127,128,133,134,146,147,],[24,24,24,24,24,24,24,24,24,24,24,24,24,]),'declaration':([0,19,35,],[7,7,76,]),'fundef':([0,19,],[8,8,]),'declarations':([2,],[35,]),'instructions':([9,35,],[42,77,]),'inits':([5,75,],[37,37,]),'assignment':([0,9,19,35,42,71,77,127,128,133,134,146,147,],[26,26,26,26,26,26,26,26,26,26,26,26,26,]),'const':([0,6,9,13,17,19,35,42,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,69,70,71,74,77,81,84,127,128,129,133,134,146,147,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'repeat_instr':([0,9,19,35,42,71,77,127,128,133,134,146,147,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'expr_list_or_empty':([69,],[111,]),'init':([5,75,79,],[36,36,120,]),'condition':([67,74,84,],[108,117,126,]),'choice_instr':([0,9,19,35,42,71,77,127,128,133,134,146,147,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'args_list':([80,],[124,]),'expression':([0,6,9,13,17,19,35,42,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,69,70,71,74,77,81,84,127,128,129,133,134,146,147,],[15,40,15,46,66,15,15,15,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,113,114,15,109,15,125,109,15,15,141,15,15,15,15,]),'labeled_instr':([0,9,19,35,42,71,77,127,128,133,134,146,147,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'print_instr':([0,9,19,35,42,71,77,127,128,133,134,146,147,],[29,29,29,29,29,29,29,29,29,29,29,29,29,]),'constructions':([0,],[19,]),'instruction':([0,9,19,35,42,71,77,127,128,133,134,146,147,],[32,43,32,43,85,115,85,139,140,142,143,148,149,]),'while_instr':([0,9,19,35,42,71,77,127,128,133,134,146,147,],[33,33,33,33,33,33,33,33,33,33,33,33,33,]),'construction':([0,19,],[34,68,]),'expression_id':([0,6,9,13,17,19,35,42,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,69,70,71,74,77,81,84,127,128,129,133,134,146,147,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'args_list_or_empty':([80,],[122,]),'arg':([80,137,],[121,145,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> constructions','program',1,'p_program','Cparser.py',38),
  ('constructions -> constructions construction','constructions',2,'p_constructions','Cparser.py',42),
  ('constructions -> construction','constructions',1,'p_constructions','Cparser.py',43),
  ('constructions -> <empty>','constructions',0,'p_constructions','Cparser.py',44),
  ('construction -> declaration','construction',1,'p_construction','Cparser.py',54),
  ('construction -> fundef','construction',1,'p_construction','Cparser.py',55),
  ('construction -> instruction','construction',1,'p_construction','Cparser.py',56),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',60),
  ('declarations -> <empty>','declarations',0,'p_declarations','Cparser.py',61),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',75),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',76),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',80),
  ('inits -> init','inits',1,'p_inits','Cparser.py',81),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',94),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',99),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',100),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',111),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',112),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',113),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',114),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',115),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',116),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',117),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',118),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',119),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',120),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',121),
  ('print_instr -> PRINT expression ;','print_instr',3,'p_print_instr','Cparser.py',125),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',126),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',130),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',134),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',138),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',139),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',140),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',141),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',149),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',150),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',154),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',158),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',162),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',166),
  ('compound_instr -> { declarations instructions }','compound_instr',4,'p_compound_instr','Cparser.py',170),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',174),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',178),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',179),
  ('const -> STRING','const',1,'p_const','Cparser.py',180),
  ('expression_id -> ID','expression_id',1,'p_expression_id','Cparser.py',189),
  ('expression -> const','expression',1,'p_expression','Cparser.py',193),
  ('expression -> expression_id','expression',1,'p_expression','Cparser.py',194),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',195),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',196),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',197),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',198),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',199),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',200),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',201),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',202),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',203),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',204),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',205),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',206),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',207),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',208),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',209),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',210),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',211),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',212),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',213),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',214),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',215),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',216),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',231),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',232),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',236),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',237),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',248),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',252),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',253),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',257),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',258),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',271),
]
