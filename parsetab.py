
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '035AE6BA0536333FC8EB26C044982F94'
    
_lr_action_items = {'>':([12,14,15,23,28,29,34,39,41,63,66,77,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,113,115,122,129,130,141,],[-45,-48,44,-47,-44,-46,-49,-47,44,44,44,44,None,44,44,-50,44,44,-54,-52,None,None,-60,-51,None,-61,None,44,-53,None,-69,-68,44,44,44,-70,-71,44,]),'SHL':([12,14,15,23,28,29,34,39,41,63,66,77,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,113,115,122,129,130,141,],[-45,-48,55,-47,-44,-46,-49,-47,55,55,55,55,55,55,55,-50,55,55,-54,-52,55,55,-60,-51,55,-61,55,55,-53,55,-69,-68,55,55,55,-70,-71,55,]),'RETURN':([0,1,5,6,7,9,10,11,13,16,18,22,24,26,27,30,31,33,42,43,53,64,67,68,70,72,73,78,82,83,85,86,105,108,114,118,119,127,132,133,134,135,136,140,142,143,144,145,147,148,149,],[17,-7,-5,-18,-26,-22,-9,-20,-21,-4,-6,17,17,-19,-24,-17,-23,-25,-40,17,-27,-41,-16,17,17,-3,-11,-10,-29,-28,-8,17,-39,-15,-30,17,17,-42,-31,17,17,-32,-34,-38,-36,-37,17,17,-76,-33,-35,]),')':([12,14,28,29,34,39,65,66,69,75,76,77,81,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,110,111,112,113,116,117,123,125,126,129,130,137,141,146,],[-45,-48,-44,-46,-49,-47,106,107,-73,118,119,-43,-78,-64,-59,-57,-50,-58,-56,-54,-52,-67,-66,-60,-51,-63,-61,-62,-55,-53,-65,-69,-68,129,130,-72,-75,133,134,-80,-77,139,-70,-71,-81,-74,-79,]),'AND':([12,14,15,23,28,29,34,39,41,63,66,77,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,113,115,122,129,130,141,],[-45,-48,48,-47,-44,-46,-49,-47,48,48,48,48,-64,48,-57,-50,-58,-56,-54,-52,-67,-66,-60,-51,-63,-61,-62,-55,-53,-65,-69,-68,48,48,48,-70,-71,48,]),'OR':([12,14,15,23,28,29,34,39,41,63,66,77,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,113,115,122,129,130,141,],[-45,-48,45,-47,-44,-46,-49,-47,45,45,45,45,-64,-59,-57,-50,-58,-56,-54,-52,-67,-66,-60,-51,-63,-61,-62,-55,-53,-65,-69,-68,45,45,45,-70,-71,45,]),'-':([12,14,15,23,28,29,34,39,41,63,66,77,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,113,115,122,129,130,141,],[-45,-48,56,-47,-44,-46,-49,-47,56,56,56,56,56,56,56,-50,56,56,-54,-52,56,56,56,-51,56,56,56,56,-53,56,-69,-68,56,56,56,-70,-71,56,]),'EQ':([12,14,15,23,28,29,34,39,41,63,66,77,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,113,115,122,129,130,141,],[-45,-48,59,-47,-44,-46,-49,-47,59,59,59,59,None,59,59,-50,59,59,-54,-52,None,None,-60,-51,None,-61,None,59,-53,None,-69,-68,59,59,59,-70,-71,59,]),'IF':([0,1,5,6,7,9,10,11,13,16,18,22,24,26,27,30,31,33,42,43,53,64,67,68,70,72,73,78,82,83,85,86,105,108,114,118,119,127,132,133,134,135,136,140,142,143,144,145,147,148,149,],[2,-7,-5,-18,-26,-22,-9,-20,-21,-4,-6,2,2,-19,-24,-17,-23,-25,-40,2,-27,-41,-16,2,2,-3,-11,-10,-29,-28,-8,2,-39,-15,-30,2,2,-42,-31,2,2,-32,-34,-38,-36,-37,2,2,-76,-33,-35,]),'GE':([12,14,15,23,28,29,34,39,41,63,66,77,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,113,115,122,129,130,141,],[-45,-48,52,-47,-44,-46,-49,-47,52,52,52,52,None,52,52,-50,52,52,-54,-52,None,None,-60,-51,None,-61,None,52,-53,None,-69,-68,52,52,52,-70,-71,52,]),'(':([0,1,2,4,5,6,7,9,10,11,13,16,17,18,21,22,23,24,26,27,30,31,32,33,35,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,67,68,69,70,71,72,73,74,78,80,82,83,85,86,105,108,109,114,118,119,127,131,132,133,134,135,136,140,142,143,144,145,147,148,149,],[21,-7,35,21,-5,-18,-26,-22,-9,-20,-21,-4,21,-6,21,21,69,21,-19,-24,-17,-23,74,-25,21,81,69,-40,21,21,21,21,21,21,21,21,21,21,-27,21,21,21,21,21,21,21,21,21,-41,-16,21,21,21,21,-3,-11,21,-10,21,-29,-28,-8,21,-39,-15,21,-30,21,21,-42,21,-31,21,21,-32,-34,-38,-36,-37,21,21,-76,-33,-35,]),'NEQ':([12,14,15,23,28,29,34,39,41,63,66,77,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,113,115,122,129,130,141,],[-45,-48,57,-47,-44,-46,-49,-47,57,57,57,57,None,57,57,-50,57,57,-54,-52,None,None,-60,-51,None,-61,None,57,-53,None,-69,-68,57,57,57,-70,-71,57,]),'SHR':([12,14,15,23,28,29,34,39,41,63,66,77,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,113,115,122,129,130,141,],[-45,-48,58,-47,-44,-46,-49,-47,58,58,58,58,58,58,58,-50,58,58,-54,-52,58,58,-60,-51,58,-61,58,58,-53,58,-69,-68,58,58,58,-70,-71,58,]),'}':([6,7,9,11,13,26,27,30,31,33,42,53,64,67,82,83,86,105,108,114,127,132,135,136,140,142,143,148,149,],[-18,-26,-22,-20,-21,-19,-24,-17,-23,-25,-40,-27,-41,-16,-29,-28,127,-39,-15,-30,-42,-31,-32,-34,-38,-36,-37,-33,-35,]),'TYPE':([0,1,5,6,7,9,10,11,13,16,18,24,26,27,30,31,33,42,43,53,64,72,73,78,81,82,83,85,105,114,127,132,135,136,138,140,142,143,147,148,149,],[3,-7,-5,-18,-26,-22,-9,-20,-21,-4,-6,3,-19,-24,-17,-23,-25,-40,84,-27,-41,-3,-11,-10,124,-29,-28,-8,-39,-30,-42,-31,-32,-34,124,-38,-36,-37,-76,-33,-35,]),'BREAK':([0,1,5,6,7,9,10,11,13,16,18,22,24,26,27,30,31,33,42,43,53,64,67,68,70,72,73,78,82,83,85,86,105,108,114,118,119,127,132,133,134,135,136,140,142,143,144,145,147,148,149,],[20,-7,-5,-18,-26,-22,-9,-20,-21,-4,-6,20,20,-19,-24,-17,-23,-25,-40,20,-27,-41,-16,20,20,-3,-11,-10,-29,-28,-8,20,-39,-15,-30,20,20,-42,-31,20,20,-32,-34,-38,-36,-37,20,20,-76,-33,-35,]),'PRINT':([0,1,5,6,7,9,10,11,13,16,18,22,24,26,27,30,31,33,42,43,53,64,67,68,70,72,73,78,82,83,85,86,105,108,114,118,119,127,132,133,134,135,136,140,142,143,144,145,147,148,149,],[4,-7,-5,-18,-26,-22,-9,-20,-21,-4,-6,4,4,-19,-24,-17,-23,-25,-40,4,-27,-41,-16,4,4,-3,-11,-10,-29,-28,-8,4,-39,-15,-30,4,4,-42,-31,4,4,-32,-34,-38,-36,-37,4,4,-76,-33,-35,]),'REPEAT':([0,1,5,6,7,9,10,11,13,16,18,22,24,26,27,30,31,33,42,43,53,64,67,68,70,72,73,78,82,83,85,86,105,108,114,118,119,127,132,133,134,135,136,140,142,143,144,145,147,148,149,],[22,-7,-5,-18,-26,-22,-9,-20,-21,-4,-6,22,22,-19,-24,-17,-23,-25,-40,22,-27,-41,-16,22,22,-3,-11,-10,-29,-28,-8,22,-39,-15,-30,22,22,-42,-31,22,22,-32,-34,-38,-36,-37,22,22,-76,-33,-35,]),'|':([12,14,15,23,28,29,34,39,41,63,66,77,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,113,115,122,129,130,141,],[-45,-48,60,-47,-44,-46,-49,-47,60,60,60,60,-64,60,-57,-50,60,-56,-54,-52,-67,-66,-60,-51,-63,-61,-62,-55,-53,-65,-69,-68,60,60,60,-70,-71,60,]),'LE':([12,14,15,23,28,29,34,39,41,63,66,77,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,113,115,122,129,130,141,],[-45,-48,54,-47,-44,-46,-49,-47,54,54,54,54,None,54,54,-50,54,54,-54,-52,None,None,-60,-51,None,-61,None,54,-53,None,-69,-68,54,54,54,-70,-71,54,]),'WHILE':([0,1,5,6,7,9,10,11,13,16,18,22,24,26,27,30,31,33,42,43,53,64,67,68,70,72,73,78,82,83,85,86,105,108,114,118,119,127,132,133,134,135,136,140,142,143,144,145,147,148,149,],[32,-7,-5,-18,-26,-22,-9,-20,-21,-4,-6,32,32,-19,-24,-17,-23,-25,-40,32,-27,-41,-16,32,32,-3,-11,-10,-29,-28,-8,32,-39,-15,-30,32,32,-42,-31,32,32,-32,-34,-38,-36,-37,32,32,-76,-33,-35,]),',':([12,14,28,29,34,36,37,39,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,112,113,120,122,123,125,129,130,137,141,146,],[-45,-48,-44,-46,-49,79,-13,-47,-64,-59,-57,-50,-58,-56,-54,-52,-67,-66,-60,-51,-63,-61,-62,-55,-53,-65,-69,-68,131,-75,-12,-14,-80,138,-70,-71,-81,-74,-79,]),'$end':([0,1,5,6,7,9,11,13,16,18,19,24,26,27,30,31,33,42,53,64,72,73,78,82,83,105,114,127,132,135,136,140,142,143,147,148,149,],[-2,-7,-5,-18,-26,-22,-20,-21,-4,-6,0,-1,-19,-24,-17,-23,-25,-40,-27,-41,-3,-11,-10,-29,-28,-39,-30,-42,-31,-32,-34,-38,-36,-37,-76,-33,-35,]),'^':([12,14,15,23,28,29,34,39,41,63,66,77,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,113,115,122,129,130,141,],[-45,-48,46,-47,-44,-46,-49,-47,46,46,46,46,-64,46,-57,-50,46,-56,-54,-52,-67,-66,-60,-51,-63,-61,-62,46,-53,-65,-69,-68,46,46,46,-70,-71,46,]),'+':([12,14,15,23,28,29,34,39,41,63,66,77,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,113,115,122,129,130,141,],[-45,-48,47,-47,-44,-46,-49,-47,47,47,47,47,47,47,47,-50,47,47,-54,-52,47,47,47,-51,47,47,47,47,-53,47,-69,-68,47,47,47,-70,-71,47,]),'error':([0,1,4,5,6,7,9,10,11,13,16,18,21,24,26,27,30,31,33,35,42,43,53,64,69,72,73,74,78,82,83,85,105,114,127,132,135,136,140,142,143,147,148,149,],[25,-7,40,-5,-18,-26,-22,-9,-20,-21,-4,-6,65,25,-19,-24,-17,-23,-25,76,-40,25,-27,-41,111,-3,-11,117,-10,-29,-28,-8,-39,-30,-42,-31,-32,-34,-38,-36,-37,-76,-33,-35,]),'CONTINUE':([0,1,5,6,7,9,10,11,13,16,18,22,24,26,27,30,31,33,42,43,53,64,67,68,70,72,73,78,82,83,85,86,105,108,114,118,119,127,132,133,134,135,136,140,142,143,144,145,147,148,149,],[8,-7,-5,-18,-26,-22,-9,-20,-21,-4,-6,8,8,-19,-24,-17,-23,-25,-40,8,-27,-41,-16,8,8,-3,-11,-10,-29,-28,-8,8,-39,-15,-30,8,8,-42,-31,8,8,-32,-34,-38,-36,-37,8,8,-76,-33,-35,]),'FLOAT':([0,1,4,5,6,7,9,10,11,13,16,17,18,21,22,24,26,27,30,31,33,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,67,68,69,70,71,72,73,74,78,80,82,83,85,86,105,108,109,114,118,119,127,131,132,133,134,135,136,140,142,143,144,145,147,148,149,],[12,-7,12,-5,-18,-26,-22,-9,-20,-21,-4,12,-6,12,12,12,-19,-24,-17,-23,-25,12,-40,12,12,12,12,12,12,12,12,12,12,-27,12,12,12,12,12,12,12,12,12,-41,-16,12,12,12,12,-3,-11,12,-10,12,-29,-28,-8,12,-39,-15,12,-30,12,12,-42,12,-31,12,12,-32,-34,-38,-36,-37,12,12,-76,-33,-35,]),'%':([12,14,15,23,28,29,34,39,41,63,66,77,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,113,115,122,129,130,141,],[-45,-48,50,-47,-44,-46,-49,-47,50,50,50,50,50,50,50,50,50,50,-54,-52,50,50,50,50,50,50,50,50,-53,50,-69,-68,50,50,50,-70,-71,50,]),'STRING':([0,1,4,5,6,7,9,10,11,13,16,17,18,21,22,24,26,27,30,31,33,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,67,68,69,70,71,72,73,74,78,80,82,83,85,86,105,108,109,114,118,119,127,131,132,133,134,135,136,140,142,143,144,145,147,148,149,],[29,-7,29,-5,-18,-26,-22,-9,-20,-21,-4,29,-6,29,29,29,-19,-24,-17,-23,-25,29,-40,29,29,29,29,29,29,29,29,29,29,-27,29,29,29,29,29,29,29,29,29,-41,-16,29,29,29,29,-3,-11,29,-10,29,-29,-28,-8,29,-39,-15,29,-30,29,29,-42,29,-31,29,29,-32,-34,-38,-36,-37,29,29,-76,-33,-35,]),'/':([12,14,15,23,28,29,34,39,41,63,66,77,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,113,115,122,129,130,141,],[-45,-48,61,-47,-44,-46,-49,-47,61,61,61,61,61,61,61,61,61,61,-54,-52,61,61,61,61,61,61,61,61,-53,61,-69,-68,61,61,61,-70,-71,61,]),';':([8,12,14,15,20,23,25,28,29,34,36,37,39,40,41,63,77,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,115,120,122,128,129,130,],[42,-45,-48,53,64,-47,73,-44,-46,-49,78,-13,-47,82,83,105,-43,-64,-59,-57,-50,-58,-56,-54,-52,-67,-66,-60,-51,-63,-61,-62,-55,-53,-65,-69,-68,132,-12,-14,140,-70,-71,]),'{':([0,1,5,6,7,9,10,11,13,16,18,22,24,26,27,30,31,33,42,43,53,64,67,68,70,72,73,78,82,83,85,86,105,108,114,118,119,127,132,133,134,135,136,139,140,142,143,144,145,147,148,149,],[10,-7,-5,-18,-26,-22,-9,-20,-21,-4,-6,10,10,-19,-24,-17,-23,-25,-40,10,-27,-41,-16,10,10,-3,-11,-10,-29,-28,-8,10,-39,-15,-30,10,10,-42,-31,10,10,-32,-34,10,-38,-36,-37,10,10,-76,-33,-35,]),'UNTIL':([6,7,9,11,13,26,27,30,31,33,42,53,64,67,68,82,83,105,108,114,127,132,135,136,140,142,143,148,149,],[-18,-26,-22,-20,-21,-19,-24,-17,-23,-25,-40,-27,-41,-16,109,-29,-28,-39,-15,-30,-42,-31,-32,-34,-38,-36,-37,-33,-35,]),':':([23,],[70,]),'INTEGER':([0,1,4,5,6,7,9,10,11,13,16,17,18,21,22,24,26,27,30,31,33,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,67,68,69,70,71,72,73,74,78,80,82,83,85,86,105,108,109,114,118,119,127,131,132,133,134,135,136,140,142,143,144,145,147,148,149,],[28,-7,28,-5,-18,-26,-22,-9,-20,-21,-4,28,-6,28,28,28,-19,-24,-17,-23,-25,28,-40,28,28,28,28,28,28,28,28,28,28,-27,28,28,28,28,28,28,28,28,28,-41,-16,28,28,28,28,-3,-11,28,-10,28,-29,-28,-8,28,-39,-15,28,-30,28,28,-42,28,-31,28,28,-32,-34,-38,-36,-37,28,28,-76,-33,-35,]),'&':([12,14,15,23,28,29,34,39,41,63,66,77,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,113,115,122,129,130,141,],[-45,-48,49,-47,-44,-46,-49,-47,49,49,49,49,-64,49,49,-50,49,-56,-54,-52,-67,-66,-60,-51,-63,-61,-62,49,-53,-65,-69,-68,49,49,49,-70,-71,49,]),'=':([23,38,121,],[71,80,80,]),'ELSE':([6,7,9,11,13,26,27,30,31,33,42,53,64,82,83,105,114,127,132,135,136,140,142,143,148,149,],[-18,-26,-22,-20,-21,-19,-24,-17,-23,-25,-40,-27,-41,-29,-28,-39,-30,-42,-31,144,145,-38,-36,-37,-33,-35,]),'ID':([0,1,3,4,5,6,7,9,10,11,13,16,17,18,21,22,24,26,27,30,31,33,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,67,68,69,70,71,72,73,74,78,79,80,82,83,84,85,86,105,108,109,114,118,119,124,127,131,132,133,134,135,136,140,142,143,144,145,147,148,149,],[23,-7,38,39,-5,-18,-26,-22,-9,-20,-21,-4,39,-6,39,23,23,-19,-24,-17,-23,-25,39,-40,23,39,39,39,39,39,39,39,39,39,-27,39,39,39,39,39,39,39,39,39,-41,-16,23,39,23,39,-3,-11,39,-10,121,39,-29,-28,121,-8,23,-39,-15,39,-30,23,23,137,-42,39,-31,23,23,-32,-34,-38,-36,-37,23,23,-76,-33,-35,]),'*':([12,14,15,23,28,29,34,39,41,63,66,77,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,113,115,122,129,130,141,],[-45,-48,51,-47,-44,-46,-49,-47,51,51,51,51,51,51,51,51,51,51,-54,-52,51,51,51,51,51,51,51,51,-53,51,-69,-68,51,51,51,-70,-71,51,]),'<':([12,14,15,23,28,29,34,39,41,63,66,77,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,113,115,122,129,130,141,],[-45,-48,62,-47,-44,-46,-49,-47,62,62,62,62,None,62,62,-50,62,62,-54,-52,None,None,-60,-51,None,-61,None,62,-53,None,-69,-68,62,62,62,-70,-71,62,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instructions':([22,43,],[68,86,]),'expr_list_or_empty':([69,],[110,]),'fundef':([0,24,],[18,18,]),'declarations':([10,],[43,]),'construction':([0,24,],[16,72,]),'args_list_or_empty':([81,],[126,]),'arg':([81,138,],[123,146,]),'repeat_instr':([0,22,24,43,68,70,86,118,119,133,134,144,145,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'init':([3,79,84,],[37,120,37,]),'args_list':([81,],[125,]),'declaration':([0,24,43,],[5,5,85,]),'return_instr':([0,22,24,43,68,70,86,118,119,133,134,144,145,],[31,31,31,31,31,31,31,31,31,31,31,31,31,]),'labeled_instr':([0,22,24,43,68,70,86,118,119,133,134,144,145,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'constructions':([0,],[24,]),'compound_instr':([0,22,24,43,68,70,86,118,119,133,134,139,144,145,],[7,7,7,7,7,7,7,7,7,7,7,147,7,7,]),'inits':([3,84,],[36,36,]),'condition':([35,74,109,],[75,116,128,]),'expression':([0,4,17,21,22,24,35,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,68,69,70,71,74,80,86,109,118,119,131,133,134,144,145,],[15,41,63,66,15,15,77,15,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,15,113,15,115,77,122,15,77,15,15,141,15,15,15,15,]),'assignment':([0,22,24,43,68,70,86,118,119,133,134,144,145,],[26,26,26,26,26,26,26,26,26,26,26,26,26,]),'instruction':([0,22,24,43,68,70,86,118,119,133,134,144,145,],[1,67,1,67,108,114,108,135,136,142,143,148,149,]),'break_instr':([0,22,24,43,68,70,86,118,119,133,134,144,145,],[27,27,27,27,27,27,27,27,27,27,27,27,27,]),'expr_list':([69,],[112,]),'choice_instr':([0,22,24,43,68,70,86,118,119,133,134,144,145,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'while_instr':([0,22,24,43,68,70,86,118,119,133,134,144,145,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'program':([0,],[19,]),'const':([0,4,17,21,22,24,35,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,68,69,70,71,74,80,86,109,118,119,131,133,134,144,145,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'continue_instr':([0,22,24,43,68,70,86,118,119,133,134,144,145,],[33,33,33,33,33,33,33,33,33,33,33,33,33,]),'expression_id':([0,4,17,21,22,24,35,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,68,69,70,71,74,80,86,109,118,119,131,133,134,144,145,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'print_instr':([0,22,24,43,68,70,86,118,119,133,134,144,145,],[30,30,30,30,30,30,30,30,30,30,30,30,30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> constructions','program',1,'p_program','Cparser.py',38),
  ('program -> <empty>','program',0,'p_program','Cparser.py',39),
  ('constructions -> constructions construction','constructions',2,'p_constructions','Cparser.py',43),
  ('constructions -> construction','constructions',1,'p_constructions','Cparser.py',44),
  ('construction -> declaration','construction',1,'p_construction','Cparser.py',54),
  ('construction -> fundef','construction',1,'p_construction','Cparser.py',55),
  ('construction -> instruction','construction',1,'p_construction','Cparser.py',56),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',60),
  ('declarations -> <empty>','declarations',0,'p_declarations','Cparser.py',61),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',75),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',76),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',80),
  ('inits -> init','inits',1,'p_inits','Cparser.py',81),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',94),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',99),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',100),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',111),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',112),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',113),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',114),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',115),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',116),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',117),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',118),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',119),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',120),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',121),
  ('print_instr -> PRINT expression ;','print_instr',3,'p_print_instr','Cparser.py',125),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',126),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',130),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',134),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',138),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',139),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',140),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',141),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',149),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',150),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',154),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',158),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',162),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',166),
  ('compound_instr -> { declarations instructions }','compound_instr',4,'p_compound_instr','Cparser.py',170),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',174),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',178),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',179),
  ('const -> STRING','const',1,'p_const','Cparser.py',180),
  ('expression_id -> ID','expression_id',1,'p_expression_id','Cparser.py',189),
  ('expression -> const','expression',1,'p_expression','Cparser.py',193),
  ('expression -> expression_id','expression',1,'p_expression','Cparser.py',194),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',195),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',196),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',197),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',198),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',199),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',200),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',201),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',202),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',203),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',204),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',205),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',206),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',207),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',208),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',209),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',210),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',211),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',212),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',213),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',214),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',215),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',216),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',231),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',232),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',236),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',237),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',248),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',252),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',253),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',257),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',258),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',271),
]
