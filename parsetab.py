
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '07D905F32B381BCF8CB426B76C90814B'
    
_lr_action_items = {'UNTIL':([3,4,9,11,12,18,21,26,30,34,36,42,43,49,60,81,83,88,89,92,120,131,135,136,137,141,142,148,149,],[-25,-17,-26,-21,-23,-22,-18,-19,-20,-24,-41,-16,82,-40,-27,-39,-15,-29,-28,-30,-42,-31,-34,-32,-38,-37,-36,-35,-33,]),'OR':([7,13,16,17,29,31,32,38,39,48,74,77,93,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,128,132,133,143,],[-45,-49,-46,-48,-44,-47,54,54,-47,54,54,54,54,54,-59,-62,-53,-55,-57,-56,-67,-65,-52,-58,-60,-51,-63,-61,-50,-66,-64,-54,-69,-68,54,-71,-70,54,]),'error':([0,1,3,4,6,8,9,11,12,15,18,19,21,24,26,27,30,33,34,35,36,37,40,41,49,50,53,60,78,81,85,88,89,92,120,131,135,136,137,141,142,147,148,149,],[14,-4,-25,-17,-7,-9,-26,-21,-23,14,-22,-5,-18,47,-19,-6,-20,73,-24,75,-41,14,-11,-3,-40,90,94,-27,-8,-39,-10,-29,-28,-30,-42,-31,-34,-32,-38,-37,-36,-76,-35,-33,]),'|':([7,13,16,17,29,31,32,38,39,48,74,77,93,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,128,132,133,143,],[-45,-49,-46,-48,-44,-47,57,57,-47,57,57,57,57,57,57,-62,-53,-55,-57,-56,-67,-65,-52,57,-60,-51,-63,-61,-50,-66,-64,-54,-69,-68,57,-71,-70,57,]),'-':([7,13,16,17,29,31,32,38,39,48,74,77,93,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,128,132,133,143,],[-45,-49,-46,-48,-44,-47,66,66,-47,66,66,66,66,66,66,66,-53,66,66,66,66,66,-52,66,66,-51,66,66,-50,66,66,-54,-69,-68,66,-71,-70,66,]),':':([31,],[51,]),'NEQ':([7,13,16,17,29,31,32,38,39,48,74,77,93,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,128,132,133,143,],[-45,-49,-46,-48,-44,-47,67,67,-47,67,67,67,67,67,67,None,-53,67,67,67,None,None,-52,67,-60,-51,None,-61,-50,None,None,-54,-69,-68,67,-71,-70,67,]),';':([5,7,13,14,16,17,25,29,31,32,38,39,44,45,47,48,77,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,122,123,128,132,133,],[36,-45,-49,40,-46,-48,49,-44,-47,60,81,-47,-13,85,88,89,-43,131,-59,-62,-53,-55,-57,-56,-67,-65,-52,-58,-60,-51,-63,-61,-50,-66,-64,-54,-69,-68,137,-12,-14,-71,-70,]),'GE':([7,13,16,17,29,31,32,38,39,48,74,77,93,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,128,132,133,143,],[-45,-49,-46,-48,-44,-47,61,61,-47,61,61,61,61,61,61,None,-53,61,61,61,None,None,-52,61,-60,-51,None,-61,-50,None,None,-54,-69,-68,61,-71,-70,61,]),'$end':([0,1,3,4,6,9,11,12,15,18,19,21,23,26,27,30,34,36,40,41,49,60,81,85,88,89,92,120,131,135,136,137,141,142,147,148,149,],[-2,-4,-25,-17,-7,-26,-21,-23,-1,-22,-5,-18,0,-19,-6,-20,-24,-41,-11,-3,-40,-27,-39,-10,-29,-28,-30,-42,-31,-34,-32,-38,-37,-36,-76,-35,-33,]),'IF':([0,1,3,4,6,8,9,11,12,15,18,19,20,21,26,27,30,34,36,37,40,41,42,43,49,51,60,78,79,81,83,85,88,89,92,118,119,120,129,130,131,135,136,137,141,142,144,145,147,148,149,],[2,-4,-25,-17,-7,-9,-26,-21,-23,2,-22,-5,2,-18,-19,-6,-20,-24,-41,2,-11,-3,-16,2,-40,2,-27,-8,2,-39,-15,-10,-29,-28,-30,2,2,-42,2,2,-31,-34,-32,-38,-37,-36,2,2,-76,-35,-33,]),'*':([7,13,16,17,29,31,32,38,39,48,74,77,93,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,128,132,133,143,],[-45,-49,-46,-48,-44,-47,63,63,-47,63,63,63,63,63,63,63,-53,63,63,63,63,63,-52,63,63,63,63,63,63,63,63,-54,-69,-68,63,-71,-70,63,]),'REPEAT':([0,1,3,4,6,8,9,11,12,15,18,19,20,21,26,27,30,34,36,37,40,41,42,43,49,51,60,78,79,81,83,85,88,89,92,118,119,120,129,130,131,135,136,137,141,142,144,145,147,148,149,],[20,-4,-25,-17,-7,-9,-26,-21,-23,20,-22,-5,20,-18,-19,-6,-20,-24,-41,20,-11,-3,-16,20,-40,20,-27,-8,20,-39,-15,-10,-29,-28,-30,20,20,-42,20,20,-31,-34,-32,-38,-37,-36,20,20,-76,-35,-33,]),'AND':([7,13,16,17,29,31,32,38,39,48,74,77,93,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,128,132,133,143,],[-45,-49,-46,-48,-44,-47,64,64,-47,64,64,64,64,64,64,-62,-53,-55,-57,-56,-67,-65,-52,-58,-60,-51,-63,-61,-50,-66,-64,-54,-69,-68,64,-71,-70,64,]),'<':([7,13,16,17,29,31,32,38,39,48,74,77,93,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,128,132,133,143,],[-45,-49,-46,-48,-44,-47,62,62,-47,62,62,62,62,62,62,None,-53,62,62,62,None,None,-52,62,-60,-51,None,-61,-50,None,None,-54,-69,-68,62,-71,-70,62,]),'}':([3,4,9,11,12,18,21,26,30,34,36,42,49,60,79,81,83,88,89,92,120,131,135,136,137,141,142,148,149,],[-25,-17,-26,-21,-23,-22,-18,-19,-20,-24,-41,-16,-40,-27,120,-39,-15,-29,-28,-30,-42,-31,-34,-32,-38,-37,-36,-35,-33,]),'STRING':([0,1,3,4,6,8,9,10,11,12,15,18,19,20,21,24,26,27,30,33,34,35,36,37,40,41,42,43,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,78,79,81,82,83,85,87,88,89,92,118,119,120,129,130,131,134,135,136,137,141,142,144,145,147,148,149,],[16,-4,-25,-17,-7,-9,-26,16,-21,-23,16,-22,-5,16,-18,16,-19,-6,-20,16,-24,16,-41,16,-11,-3,-16,16,-40,16,16,16,16,16,16,16,16,16,16,-27,16,16,16,16,16,16,16,16,16,16,16,16,-8,16,-39,16,-15,-10,16,-29,-28,-30,16,16,-42,16,16,-31,16,-34,-32,-38,-37,-36,16,16,-76,-35,-33,]),'TYPE':([0,1,3,4,6,8,9,11,12,15,18,19,21,26,27,30,34,36,37,40,41,49,60,78,81,85,86,88,89,92,120,131,135,136,137,139,141,142,147,148,149,],[22,-4,-25,-17,-7,-9,-26,-21,-23,22,-22,-5,-18,-19,-6,-20,-24,-41,80,-11,-3,-40,-27,-8,-39,-10,125,-29,-28,-30,-42,-31,-34,-32,-38,125,-37,-36,-76,-35,-33,]),'=':([31,46,121,],[52,87,87,]),'SHR':([7,13,16,17,29,31,32,38,39,48,74,77,93,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,128,132,133,143,],[-45,-49,-46,-48,-44,-47,68,68,-47,68,68,68,68,68,68,68,-53,68,68,68,68,68,-52,68,-60,-51,68,-61,-50,68,68,-54,-69,-68,68,-71,-70,68,]),'BREAK':([0,1,3,4,6,8,9,11,12,15,18,19,20,21,26,27,30,34,36,37,40,41,42,43,49,51,60,78,79,81,83,85,88,89,92,118,119,120,129,130,131,135,136,137,141,142,144,145,147,148,149,],[5,-4,-25,-17,-7,-9,-26,-21,-23,5,-22,-5,5,-18,-19,-6,-20,-24,-41,5,-11,-3,-16,5,-40,5,-27,-8,5,-39,-15,-10,-29,-28,-30,5,5,-42,5,5,-31,-34,-32,-38,-37,-36,5,5,-76,-35,-33,]),'PRINT':([0,1,3,4,6,8,9,11,12,15,18,19,20,21,26,27,30,34,36,37,40,41,42,43,49,51,60,78,79,81,83,85,88,89,92,118,119,120,129,130,131,135,136,137,141,142,144,145,147,148,149,],[24,-4,-25,-17,-7,-9,-26,-21,-23,24,-22,-5,24,-18,-19,-6,-20,-24,-41,24,-11,-3,-16,24,-40,24,-27,-8,24,-39,-15,-10,-29,-28,-30,24,24,-42,24,24,-31,-34,-32,-38,-37,-36,24,24,-76,-35,-33,]),'CONTINUE':([0,1,3,4,6,8,9,11,12,15,18,19,20,21,26,27,30,34,36,37,40,41,42,43,49,51,60,78,79,81,83,85,88,89,92,118,119,120,129,130,131,135,136,137,141,142,144,145,147,148,149,],[25,-4,-25,-17,-7,-9,-26,-21,-23,25,-22,-5,25,-18,-19,-6,-20,-24,-41,25,-11,-3,-16,25,-40,25,-27,-8,25,-39,-15,-10,-29,-28,-30,25,25,-42,25,25,-31,-34,-32,-38,-37,-36,25,25,-76,-35,-33,]),'/':([7,13,16,17,29,31,32,38,39,48,74,77,93,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,128,132,133,143,],[-45,-49,-46,-48,-44,-47,56,56,-47,56,56,56,56,56,56,56,-53,56,56,56,56,56,-52,56,56,56,56,56,56,56,56,-54,-69,-68,56,-71,-70,56,]),'INTEGER':([0,1,3,4,6,8,9,10,11,12,15,18,19,20,21,24,26,27,30,33,34,35,36,37,40,41,42,43,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,78,79,81,82,83,85,87,88,89,92,118,119,120,129,130,131,134,135,136,137,141,142,144,145,147,148,149,],[29,-4,-25,-17,-7,-9,-26,29,-21,-23,29,-22,-5,29,-18,29,-19,-6,-20,29,-24,29,-41,29,-11,-3,-16,29,-40,29,29,29,29,29,29,29,29,29,29,-27,29,29,29,29,29,29,29,29,29,29,29,29,-8,29,-39,29,-15,-10,29,-29,-28,-30,29,29,-42,29,29,-31,29,-34,-32,-38,-37,-36,29,29,-76,-35,-33,]),'^':([7,13,16,17,29,31,32,38,39,48,74,77,93,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,128,132,133,143,],[-45,-49,-46,-48,-44,-47,58,58,-47,58,58,58,58,58,58,-62,-53,58,-57,-56,-67,-65,-52,58,-60,-51,-63,-61,-50,-66,-64,-54,-69,-68,58,-71,-70,58,]),'+':([7,13,16,17,29,31,32,38,39,48,74,77,93,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,128,132,133,143,],[-45,-49,-46,-48,-44,-47,69,69,-47,69,69,69,69,69,69,69,-53,69,69,69,69,69,-52,69,69,-51,69,69,-50,69,69,-54,-69,-68,69,-71,-70,69,]),'FLOAT':([0,1,3,4,6,8,9,10,11,12,15,18,19,20,21,24,26,27,30,33,34,35,36,37,40,41,42,43,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,78,79,81,82,83,85,87,88,89,92,118,119,120,129,130,131,134,135,136,137,141,142,144,145,147,148,149,],[7,-4,-25,-17,-7,-9,-26,7,-21,-23,7,-22,-5,7,-18,7,-19,-6,-20,7,-24,7,-41,7,-11,-3,-16,7,-40,7,7,7,7,7,7,7,7,7,7,-27,7,7,7,7,7,7,7,7,7,7,7,7,-8,7,-39,7,-15,-10,7,-29,-28,-30,7,7,-42,7,7,-31,7,-34,-32,-38,-37,-36,7,7,-76,-35,-33,]),'{':([0,1,3,4,6,8,9,11,12,15,18,19,20,21,26,27,30,34,36,37,40,41,42,43,49,51,60,78,79,81,83,85,88,89,92,118,119,120,129,130,131,135,136,137,140,141,142,144,145,147,148,149,],[8,-4,-25,-17,-7,-9,-26,-21,-23,8,-22,-5,8,-18,-19,-6,-20,-24,-41,8,-11,-3,-16,8,-40,8,-27,-8,8,-39,-15,-10,-29,-28,-30,8,8,-42,8,8,-31,-34,-32,-38,8,-37,-36,8,8,-76,-35,-33,]),')':([7,13,16,17,29,39,53,73,74,75,76,77,86,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,124,126,127,132,133,138,143,146,],[-45,-49,-46,-48,-44,-47,-73,116,117,118,119,-43,-78,129,130,132,133,-75,-72,-59,-62,-53,-55,-57,-56,-67,-65,-52,-58,-60,-51,-63,-61,-50,-66,-64,-54,-69,-68,-80,-77,140,-71,-70,-81,-74,-79,]),'RETURN':([0,1,3,4,6,8,9,11,12,15,18,19,20,21,26,27,30,34,36,37,40,41,42,43,49,51,60,78,79,81,83,85,88,89,92,118,119,120,129,130,131,135,136,137,141,142,144,145,147,148,149,],[10,-4,-25,-17,-7,-9,-26,-21,-23,10,-22,-5,10,-18,-19,-6,-20,-24,-41,10,-11,-3,-16,10,-40,10,-27,-8,10,-39,-15,-10,-29,-28,-30,10,10,-42,10,10,-31,-34,-32,-38,-37,-36,10,10,-76,-35,-33,]),'%':([7,13,16,17,29,31,32,38,39,48,74,77,93,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,128,132,133,143,],[-45,-49,-46,-48,-44,-47,72,72,-47,72,72,72,72,72,72,72,-53,72,72,72,72,72,-52,72,72,72,72,72,72,72,72,-54,-69,-68,72,-71,-70,72,]),'WHILE':([0,1,3,4,6,8,9,11,12,15,18,19,20,21,26,27,30,34,36,37,40,41,42,43,49,51,60,78,79,81,83,85,88,89,92,118,119,120,129,130,131,135,136,137,141,142,144,145,147,148,149,],[28,-4,-25,-17,-7,-9,-26,-21,-23,28,-22,-5,28,-18,-19,-6,-20,-24,-41,28,-11,-3,-16,28,-40,28,-27,-8,28,-39,-15,-10,-29,-28,-30,28,28,-42,28,28,-31,-34,-32,-38,-37,-36,28,28,-76,-35,-33,]),',':([7,13,16,17,29,39,44,45,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,123,124,126,128,132,133,138,143,146,],[-45,-49,-46,-48,-44,-47,-13,84,-75,134,-59,-62,-53,-55,-57,-56,-67,-65,-52,-58,-60,-51,-63,-61,-50,-66,-64,-54,-69,-68,-12,-80,139,-14,-71,-70,-81,-74,-79,]),'LE':([7,13,16,17,29,31,32,38,39,48,74,77,93,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,128,132,133,143,],[-45,-49,-46,-48,-44,-47,70,70,-47,70,70,70,70,70,70,None,-53,70,70,70,None,None,-52,70,-60,-51,None,-61,-50,None,None,-54,-69,-68,70,-71,-70,70,]),'SHL':([7,13,16,17,29,31,32,38,39,48,74,77,93,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,128,132,133,143,],[-45,-49,-46,-48,-44,-47,65,65,-47,65,65,65,65,65,65,65,-53,65,65,65,65,65,-52,65,-60,-51,65,-61,-50,65,65,-54,-69,-68,65,-71,-70,65,]),'&':([7,13,16,17,29,31,32,38,39,48,74,77,93,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,128,132,133,143,],[-45,-49,-46,-48,-44,-47,59,59,-47,59,59,59,59,59,59,-62,-53,59,59,-56,-67,-65,-52,59,-60,-51,-63,-61,-50,-66,-64,-54,-69,-68,59,-71,-70,59,]),'>':([7,13,16,17,29,31,32,38,39,48,74,77,93,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,128,132,133,143,],[-45,-49,-46,-48,-44,-47,71,71,-47,71,71,71,71,71,71,None,-53,71,71,71,None,None,-52,71,-60,-51,None,-61,-50,None,None,-54,-69,-68,71,-71,-70,71,]),'EQ':([7,13,16,17,29,31,32,38,39,48,74,77,93,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,128,132,133,143,],[-45,-49,-46,-48,-44,-47,55,55,-47,55,55,55,55,55,55,None,-53,55,55,55,None,None,-52,55,-60,-51,None,-61,-50,None,None,-54,-69,-68,55,-71,-70,55,]),'ELSE':([3,4,9,11,12,18,21,26,30,34,36,49,60,81,88,89,92,120,131,135,136,137,141,142,148,149,],[-25,-17,-26,-21,-23,-22,-18,-19,-20,-24,-41,-40,-27,-39,-29,-28,-30,-42,-31,144,145,-38,-37,-36,-35,-33,]),'(':([0,1,2,3,4,6,8,9,10,11,12,15,18,19,20,21,24,26,27,28,30,31,33,34,35,36,37,39,40,41,42,43,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,78,79,81,82,83,85,87,88,89,92,118,119,120,129,130,131,134,135,136,137,141,142,144,145,147,148,149,],[33,-4,35,-25,-17,-7,-9,-26,33,-21,-23,33,-22,-5,33,-18,33,-19,-6,50,-20,53,33,-24,33,-41,33,53,-11,-3,-16,33,86,-40,33,33,33,33,33,33,33,33,33,33,-27,33,33,33,33,33,33,33,33,33,33,33,33,-8,33,-39,33,-15,-10,33,-29,-28,-30,33,33,-42,33,33,-31,33,-34,-32,-38,-37,-36,33,33,-76,-35,-33,]),'ID':([0,1,3,4,6,8,9,10,11,12,15,18,19,20,21,22,24,26,27,30,33,34,35,36,37,40,41,42,43,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,78,79,80,81,82,83,84,85,87,88,89,92,118,119,120,125,129,130,131,134,135,136,137,141,142,144,145,147,148,149,],[31,-4,-25,-17,-7,-9,-26,39,-21,-23,31,-22,-5,31,-18,46,39,-19,-6,-20,39,-24,39,-41,31,-11,-3,-16,31,-40,39,31,39,39,39,39,39,39,39,39,-27,39,39,39,39,39,39,39,39,39,39,39,39,-8,31,121,-39,39,-15,121,-10,39,-29,-28,-30,31,31,-42,138,31,31,-31,39,-34,-32,-38,-37,-36,31,31,-76,-35,-33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constructions':([0,],[15,]),'return_instr':([0,15,20,37,43,51,79,118,119,129,130,144,145,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'continue_instr':([0,15,20,37,43,51,79,118,119,129,130,144,145,],[3,3,3,3,3,3,3,3,3,3,3,3,3,]),'init':([22,80,84,],[44,44,123,]),'args_list_or_empty':([86,],[127,]),'repeat_instr':([0,15,20,37,43,51,79,118,119,129,130,144,145,],[18,18,18,18,18,18,18,18,18,18,18,18,18,]),'declaration':([0,15,37,],[19,19,78,]),'instructions':([20,37,],[43,79,]),'declarations':([8,],[37,]),'labeled_instr':([0,15,20,37,43,51,79,118,119,129,130,144,145,],[21,21,21,21,21,21,21,21,21,21,21,21,21,]),'arg':([86,139,],[124,146,]),'expr_list_or_empty':([53,],[95,]),'program':([0,],[23,]),'print_instr':([0,15,20,37,43,51,79,118,119,129,130,144,145,],[4,4,4,4,4,4,4,4,4,4,4,4,4,]),'construction':([0,15,],[1,41,]),'condition':([35,50,82,],[76,91,122,]),'assignment':([0,15,20,37,43,51,79,118,119,129,130,144,145,],[26,26,26,26,26,26,26,26,26,26,26,26,26,]),'fundef':([0,15,],[27,27,]),'instruction':([0,15,20,37,43,51,79,118,119,129,130,144,145,],[6,6,42,42,83,92,83,135,136,141,142,148,149,]),'while_instr':([0,15,20,37,43,51,79,118,119,129,130,144,145,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'compound_instr':([0,15,20,37,43,51,79,118,119,129,130,140,144,145,],[9,9,9,9,9,9,9,9,9,9,9,147,9,9,]),'const':([0,10,15,20,24,33,35,37,43,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,79,82,87,118,119,129,130,134,144,145,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'expression_id':([0,10,15,20,24,33,35,37,43,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,79,82,87,118,119,129,130,134,144,145,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'expr_list':([53,],[97,]),'choice_instr':([0,15,20,37,43,51,79,118,119,129,130,144,145,],[30,30,30,30,30,30,30,30,30,30,30,30,30,]),'inits':([22,80,],[45,45,]),'args_list':([86,],[126,]),'expression':([0,10,15,20,24,33,35,37,43,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,79,82,87,118,119,129,130,134,144,145,],[32,38,32,32,48,74,77,32,32,77,32,93,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,32,77,128,32,32,32,32,143,32,32,]),'break_instr':([0,15,20,37,43,51,79,118,119,129,130,144,145,],[34,34,34,34,34,34,34,34,34,34,34,34,34,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> constructions','program',1,'p_program','Cparser.py',38),
  ('program -> <empty>','program',0,'p_program','Cparser.py',39),
  ('constructions -> constructions construction','constructions',2,'p_constructions','Cparser.py',43),
  ('constructions -> construction','constructions',1,'p_constructions','Cparser.py',44),
  ('construction -> declaration','construction',1,'p_construction','Cparser.py',54),
  ('construction -> fundef','construction',1,'p_construction','Cparser.py',55),
  ('construction -> instruction','construction',1,'p_construction','Cparser.py',56),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',60),
  ('declarations -> <empty>','declarations',0,'p_declarations','Cparser.py',61),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',75),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',76),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',80),
  ('inits -> init','inits',1,'p_inits','Cparser.py',81),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',94),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',99),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',100),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',111),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',112),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',113),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',114),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',115),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',116),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',117),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',118),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',119),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',120),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',121),
  ('print_instr -> PRINT expression ;','print_instr',3,'p_print_instr','Cparser.py',125),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',126),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',130),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',134),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',138),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',139),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',140),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',141),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',149),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',150),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',154),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',158),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',162),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',166),
  ('compound_instr -> { declarations instructions }','compound_instr',4,'p_compound_instr','Cparser.py',170),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',174),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',178),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',179),
  ('const -> STRING','const',1,'p_const','Cparser.py',180),
  ('expression_id -> ID','expression_id',1,'p_expression_id','Cparser.py',189),
  ('expression -> const','expression',1,'p_expression','Cparser.py',193),
  ('expression -> expression_id','expression',1,'p_expression','Cparser.py',194),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',195),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',196),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',197),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',198),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',199),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',200),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',201),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',202),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',203),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',204),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',205),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',206),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',207),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',208),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',209),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',210),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',211),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',212),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',213),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',214),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',215),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',216),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',231),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',232),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',236),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',237),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',248),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',252),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',253),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',257),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',258),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',271),
]
