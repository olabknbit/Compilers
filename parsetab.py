
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '55F47E6D6CBD446805C9ECC9D91786C1'
    
_lr_action_items = {'}':([1,10,11,15,17,21,25,26,27,29,41,60,66,74,75,81,100,112,114,115,118,134,135,136,137,141,142,148,149,],[-25,-19,-21,-17,-18,-26,-20,-23,-24,-22,-27,-16,-40,-41,118,-39,-15,-30,-28,-29,-42,-31,-32,-34,-38,-36,-37,-33,-35,]),'FLOAT':([0,1,2,3,4,7,9,10,11,14,15,17,18,21,24,25,26,27,29,31,32,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,69,74,75,77,81,100,101,103,104,112,114,115,118,120,121,129,130,133,134,135,136,137,141,142,144,145,147,148,149,],[8,-25,8,-6,-9,-7,8,-19,-21,-4,-17,-18,8,-26,-5,-20,-23,-24,-22,8,8,-3,8,8,8,-27,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-16,-11,8,-40,8,8,8,-41,8,-8,-39,-15,8,8,-10,-30,-28,-29,-42,8,8,8,8,8,-31,-32,-34,-38,-36,-37,8,8,-76,-33,-35,]),'TYPE':([0,1,2,3,4,7,10,11,14,15,17,21,24,25,26,27,29,35,36,41,64,66,74,77,81,102,104,112,114,115,118,134,135,136,137,138,141,142,147,148,149,],[19,-25,19,-6,-9,-7,-19,-21,-4,-17,-18,-26,-5,-20,-23,-24,-22,-3,76,-27,-11,-40,-41,-8,-39,124,-10,-30,-28,-29,-42,-31,-32,-34,-38,124,-36,-37,-76,-33,-35,]),'PRINT':([0,1,2,3,4,7,10,11,14,15,17,18,21,24,25,26,27,29,35,36,41,59,60,64,66,68,74,75,77,81,100,104,112,114,115,118,120,121,129,130,134,135,136,137,141,142,144,145,147,148,149,],[31,-25,31,-6,-9,-7,-19,-21,-4,-17,-18,31,-26,-5,-20,-23,-24,-22,-3,31,-27,31,-16,-11,-40,31,-41,31,-8,-39,-15,-10,-30,-28,-29,-42,31,31,31,31,-31,-32,-34,-38,-36,-37,31,31,-76,-33,-35,]),'ELSE':([1,10,11,15,17,21,25,26,27,29,41,66,74,81,112,114,115,118,134,135,136,137,141,142,148,149,],[-25,-19,-21,-17,-18,-26,-20,-23,-24,-22,-27,-40,-41,-39,-30,-28,-29,-42,-31,144,145,-38,-36,-37,-33,-35,]),'=':([30,62,119,],[69,103,103,]),'/':([6,8,12,13,20,30,34,38,39,70,72,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,113,116,117,127,131,132,143,],[-44,-45,-48,58,-49,-47,-46,-47,58,58,58,58,58,58,58,-54,58,58,58,58,58,58,58,58,58,58,-52,58,58,-53,58,58,-68,-69,58,-70,-71,58,]),'SHR':([6,8,12,13,20,30,34,38,39,70,72,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,113,116,117,127,131,132,143,],[-44,-45,-48,51,-49,-47,-46,-47,51,51,51,51,51,51,51,-54,51,51,-50,-60,51,51,-61,51,51,-51,-52,51,51,-53,51,51,-68,-69,51,-70,-71,51,]),'+':([6,8,12,13,20,30,34,38,39,70,72,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,113,116,117,127,131,132,143,],[-44,-45,-48,47,-49,-47,-46,-47,47,47,47,47,47,47,47,-54,47,47,-50,47,47,47,47,47,47,-51,-52,47,47,-53,47,47,-68,-69,47,-70,-71,47,]),'{':([0,1,2,3,4,7,10,11,14,15,17,18,21,24,25,26,27,29,35,36,41,59,60,64,66,68,74,75,77,81,100,104,112,114,115,118,120,121,129,130,134,135,136,137,140,141,142,144,145,147,148,149,],[4,-25,4,-6,-9,-7,-19,-21,-4,-17,-18,4,-26,-5,-20,-23,-24,-22,-3,4,-27,4,-16,-11,-40,4,-41,4,-8,-39,-15,-10,-30,-28,-29,-42,4,4,4,4,-31,-32,-34,-38,4,-36,-37,4,4,-76,-33,-35,]),'$end':([0,1,2,3,7,10,11,14,15,16,17,21,24,25,26,27,29,35,41,64,66,74,81,104,112,114,115,118,134,135,136,137,141,142,147,148,149,],[-2,-25,-1,-6,-7,-19,-21,-4,-17,0,-18,-26,-5,-20,-23,-24,-22,-3,-27,-11,-40,-41,-39,-10,-30,-28,-29,-42,-31,-32,-34,-38,-36,-37,-76,-33,-35,]),'INTEGER':([0,1,2,3,4,7,9,10,11,14,15,17,18,21,24,25,26,27,29,31,32,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,69,74,75,77,81,100,101,103,104,112,114,115,118,120,121,129,130,133,134,135,136,137,141,142,144,145,147,148,149,],[6,-25,6,-6,-9,-7,6,-19,-21,-4,-17,-18,6,-26,-5,-20,-23,-24,-22,6,6,-3,6,6,6,-27,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-16,-11,6,-40,6,6,6,-41,6,-8,-39,-15,6,6,-10,-30,-28,-29,-42,6,6,6,6,6,-31,-32,-34,-38,-36,-37,6,6,-76,-33,-35,]),'<':([6,8,12,13,20,30,34,38,39,70,72,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,113,116,117,127,131,132,143,],[-44,-45,-48,42,-49,-47,-46,-47,42,42,42,42,42,None,42,-54,42,42,-50,-60,None,42,-61,None,None,-51,-52,None,None,-53,42,42,-68,-69,42,-70,-71,42,]),'LE':([6,8,12,13,20,30,34,38,39,70,72,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,113,116,117,127,131,132,143,],[-44,-45,-48,52,-49,-47,-46,-47,52,52,52,52,52,None,52,-54,52,52,-50,-60,None,52,-61,None,None,-51,-52,None,None,-53,52,52,-68,-69,52,-70,-71,52,]),'EQ':([6,8,12,13,20,30,34,38,39,70,72,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,113,116,117,127,131,132,143,],[-44,-45,-48,49,-49,-47,-46,-47,49,49,49,49,49,None,49,-54,49,49,-50,-60,None,49,-61,None,None,-51,-52,None,None,-53,49,49,-68,-69,49,-70,-71,49,]),'-':([6,8,12,13,20,30,34,38,39,70,72,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,113,116,117,127,131,132,143,],[-44,-45,-48,54,-49,-47,-46,-47,54,54,54,54,54,54,54,-54,54,54,-50,54,54,54,54,54,54,-51,-52,54,54,-53,54,54,-68,-69,54,-70,-71,54,]),';':([6,8,12,13,20,22,28,30,33,34,38,39,61,63,70,71,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,113,116,117,122,127,128,131,132,],[-44,-45,-48,41,-49,64,66,-47,74,-46,-47,81,-13,104,114,115,-43,-58,-65,-55,-54,-59,-56,-50,-60,-62,-57,-61,-66,-64,-51,-52,-67,-63,-53,134,-68,-69,137,-14,-12,-70,-71,]),'NEQ':([6,8,12,13,20,30,34,38,39,70,72,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,113,116,117,127,131,132,143,],[-44,-45,-48,57,-49,-47,-46,-47,57,57,57,57,57,None,57,-54,57,57,-50,-60,None,57,-61,None,None,-51,-52,None,None,-53,57,57,-68,-69,57,-70,-71,57,]),'RETURN':([0,1,2,3,4,7,10,11,14,15,17,18,21,24,25,26,27,29,35,36,41,59,60,64,66,68,74,75,77,81,100,104,112,114,115,118,120,121,129,130,134,135,136,137,141,142,144,145,147,148,149,],[9,-25,9,-6,-9,-7,-19,-21,-4,-17,-18,9,-26,-5,-20,-23,-24,-22,-3,9,-27,9,-16,-11,-40,9,-41,9,-8,-39,-15,-10,-30,-28,-29,-42,9,9,9,9,-31,-32,-34,-38,-36,-37,9,9,-76,-33,-35,]),'error':([0,1,2,3,4,7,10,11,14,15,17,21,24,25,26,27,29,31,32,35,36,37,41,64,65,66,67,74,77,81,104,112,114,115,118,134,135,136,137,141,142,147,148,149,],[22,-25,22,-6,-9,-7,-19,-21,-4,-17,-18,-26,-5,-20,-23,-24,-22,71,73,-3,22,80,-27,-11,107,-40,110,-41,-8,-39,-10,-30,-28,-29,-42,-31,-32,-34,-38,-36,-37,-76,-33,-35,]),')':([6,8,12,20,34,38,67,72,73,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,106,107,108,109,110,111,116,117,123,125,126,131,132,139,143,146,],[-44,-45,-48,-49,-46,-47,-73,116,117,120,-43,121,-58,-65,-55,-54,-59,-56,-50,-60,-62,-57,-61,-66,-64,-51,-52,-67,-63,-53,-78,129,130,-75,131,132,-72,-68,-69,-77,140,-80,-70,-71,-81,-74,-79,]),'WHILE':([0,1,2,3,4,7,10,11,14,15,17,18,21,24,25,26,27,29,35,36,41,59,60,64,66,68,74,75,77,81,100,104,112,114,115,118,120,121,129,130,134,135,136,137,141,142,144,145,147,148,149,],[23,-25,23,-6,-9,-7,-19,-21,-4,-17,-18,23,-26,-5,-20,-23,-24,-22,-3,23,-27,23,-16,-11,-40,23,-41,23,-8,-39,-15,-10,-30,-28,-29,-42,23,23,23,23,-31,-32,-34,-38,-36,-37,23,23,-76,-33,-35,]),'AND':([6,8,12,13,20,30,34,38,39,70,72,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,113,116,117,127,131,132,143,],[-44,-45,-48,40,-49,-47,-46,-47,40,40,40,40,-58,-65,-55,-54,40,-56,-50,-60,-62,-57,-61,-66,-64,-51,-52,-67,-63,-53,40,40,-68,-69,40,-70,-71,40,]),'SHL':([6,8,12,13,20,30,34,38,39,70,72,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,113,116,117,127,131,132,143,],[-44,-45,-48,48,-49,-47,-46,-47,48,48,48,48,48,48,48,-54,48,48,-50,-60,48,48,-61,48,48,-51,-52,48,48,-53,48,48,-68,-69,48,-70,-71,48,]),'STRING':([0,1,2,3,4,7,9,10,11,14,15,17,18,21,24,25,26,27,29,31,32,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,69,74,75,77,81,100,101,103,104,112,114,115,118,120,121,129,130,133,134,135,136,137,141,142,144,145,147,148,149,],[34,-25,34,-6,-9,-7,34,-19,-21,-4,-17,-18,34,-26,-5,-20,-23,-24,-22,34,34,-3,34,34,34,-27,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-16,-11,34,-40,34,34,34,-41,34,-8,-39,-15,34,34,-10,-30,-28,-29,-42,34,34,34,34,34,-31,-32,-34,-38,-36,-37,34,34,-76,-33,-35,]),'>':([6,8,12,13,20,30,34,38,39,70,72,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,113,116,117,127,131,132,143,],[-44,-45,-48,53,-49,-47,-46,-47,53,53,53,53,53,None,53,-54,53,53,-50,-60,None,53,-61,None,None,-51,-52,None,None,-53,53,53,-68,-69,53,-70,-71,53,]),'|':([6,8,12,13,20,30,34,38,39,70,72,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,113,116,117,127,131,132,143,],[-44,-45,-48,43,-49,-47,-46,-47,43,43,43,43,43,-65,-55,-54,43,-56,-50,-60,-62,-57,-61,-66,-64,-51,-52,-67,-63,-53,43,43,-68,-69,43,-70,-71,43,]),'GE':([6,8,12,13,20,30,34,38,39,70,72,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,113,116,117,127,131,132,143,],[-44,-45,-48,56,-49,-47,-46,-47,56,56,56,56,56,None,56,-54,56,56,-50,-60,None,56,-61,None,None,-51,-52,None,None,-53,56,56,-68,-69,56,-70,-71,56,]),',':([6,8,12,20,34,38,61,63,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,111,116,117,123,126,127,128,131,132,139,143,146,],[-44,-45,-48,-49,-46,-47,-13,105,-58,-65,-55,-54,-59,-56,-50,-60,-62,-57,-61,-66,-64,-51,-52,-67,-63,-53,-75,133,-68,-69,138,-80,-14,-12,-70,-71,-81,-74,-79,]),'OR':([6,8,12,13,20,30,34,38,39,70,72,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,113,116,117,127,131,132,143,],[-44,-45,-48,45,-49,-47,-46,-47,45,45,45,45,-58,-65,-55,-54,-59,-56,-50,-60,-62,-57,-61,-66,-64,-51,-52,-67,-63,-53,45,45,-68,-69,45,-70,-71,45,]),'&':([6,8,12,13,20,30,34,38,39,70,72,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,113,116,117,127,131,132,143,],[-44,-45,-48,46,-49,-47,-46,-47,46,46,46,46,46,-65,46,-54,46,-56,-50,-60,-62,46,-61,-66,-64,-51,-52,-67,-63,-53,46,46,-68,-69,46,-70,-71,46,]),'CONTINUE':([0,1,2,3,4,7,10,11,14,15,17,18,21,24,25,26,27,29,35,36,41,59,60,64,66,68,74,75,77,81,100,104,112,114,115,118,120,121,129,130,134,135,136,137,141,142,144,145,147,148,149,],[28,-25,28,-6,-9,-7,-19,-21,-4,-17,-18,28,-26,-5,-20,-23,-24,-22,-3,28,-27,28,-16,-11,-40,28,-41,28,-8,-39,-15,-10,-30,-28,-29,-42,28,28,28,28,-31,-32,-34,-38,-36,-37,28,28,-76,-33,-35,]),'UNTIL':([1,10,11,15,17,21,25,26,27,29,41,59,60,66,74,81,100,112,114,115,118,134,135,136,137,141,142,148,149,],[-25,-19,-21,-17,-18,-26,-20,-23,-24,-22,-27,101,-16,-40,-41,-39,-15,-30,-28,-29,-42,-31,-32,-34,-38,-36,-37,-33,-35,]),'IF':([0,1,2,3,4,7,10,11,14,15,17,18,21,24,25,26,27,29,35,36,41,59,60,64,66,68,74,75,77,81,100,104,112,114,115,118,120,121,129,130,134,135,136,137,141,142,144,145,147,148,149,],[5,-25,5,-6,-9,-7,-19,-21,-4,-17,-18,5,-26,-5,-20,-23,-24,-22,-3,5,-27,5,-16,-11,-40,5,-41,5,-8,-39,-15,-10,-30,-28,-29,-42,5,5,5,5,-31,-32,-34,-38,-36,-37,5,5,-76,-33,-35,]),'ID':([0,1,2,3,4,7,9,10,11,14,15,17,18,19,21,24,25,26,27,29,31,32,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,69,74,75,76,77,81,100,101,103,104,105,112,114,115,118,120,121,124,129,130,133,134,135,136,137,141,142,144,145,147,148,149,],[30,-25,30,-6,-9,-7,38,-19,-21,-4,-17,-18,30,62,-26,-5,-20,-23,-24,-22,38,38,-3,30,38,38,-27,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,30,-16,-11,38,-40,38,30,38,-41,30,119,-8,-39,-15,38,38,-10,119,-30,-28,-29,-42,30,30,139,30,30,38,-31,-32,-34,-38,-36,-37,30,30,-76,-33,-35,]),'(':([0,1,2,3,4,5,7,9,10,11,14,15,17,18,21,23,24,25,26,27,29,30,31,32,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,65,66,67,68,69,74,75,77,81,100,101,103,104,112,114,115,118,120,121,129,130,133,134,135,136,137,141,142,144,145,147,148,149,],[32,-25,32,-6,-9,37,-7,32,-19,-21,-4,-17,-18,32,-26,65,-5,-20,-23,-24,-22,67,32,32,-3,32,32,67,32,-27,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-16,102,-11,32,-40,32,32,32,-41,32,-8,-39,-15,32,32,-10,-30,-28,-29,-42,32,32,32,32,32,-31,-32,-34,-38,-36,-37,32,32,-76,-33,-35,]),':':([30,],[68,]),'*':([6,8,12,13,20,30,34,38,39,70,72,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,113,116,117,127,131,132,143,],[-44,-45,-48,55,-49,-47,-46,-47,55,55,55,55,55,55,55,-54,55,55,55,55,55,55,55,55,55,55,-52,55,55,-53,55,55,-68,-69,55,-70,-71,55,]),'BREAK':([0,1,2,3,4,7,10,11,14,15,17,18,21,24,25,26,27,29,35,36,41,59,60,64,66,68,74,75,77,81,100,104,112,114,115,118,120,121,129,130,134,135,136,137,141,142,144,145,147,148,149,],[33,-25,33,-6,-9,-7,-19,-21,-4,-17,-18,33,-26,-5,-20,-23,-24,-22,-3,33,-27,33,-16,-11,-40,33,-41,33,-8,-39,-15,-10,-30,-28,-29,-42,33,33,33,33,-31,-32,-34,-38,-36,-37,33,33,-76,-33,-35,]),'REPEAT':([0,1,2,3,4,7,10,11,14,15,17,18,21,24,25,26,27,29,35,36,41,59,60,64,66,68,74,75,77,81,100,104,112,114,115,118,120,121,129,130,134,135,136,137,141,142,144,145,147,148,149,],[18,-25,18,-6,-9,-7,-19,-21,-4,-17,-18,18,-26,-5,-20,-23,-24,-22,-3,18,-27,18,-16,-11,-40,18,-41,18,-8,-39,-15,-10,-30,-28,-29,-42,18,18,18,18,-31,-32,-34,-38,-36,-37,18,18,-76,-33,-35,]),'^':([6,8,12,13,20,30,34,38,39,70,72,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,113,116,117,127,131,132,143,],[-44,-45,-48,50,-49,-47,-46,-47,50,50,50,50,50,-65,50,-54,50,-56,-50,-60,-62,-57,-61,-66,-64,-51,-52,-67,-63,-53,50,50,-68,-69,50,-70,-71,50,]),'%':([6,8,12,13,20,30,34,38,39,70,72,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,113,116,117,127,131,132,143,],[-44,-45,-48,44,-49,-47,-46,-47,44,44,44,44,44,44,44,-54,44,44,44,44,44,44,44,44,44,44,-52,44,44,-53,44,44,-68,-69,44,-70,-71,44,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([19,76,105,],[61,61,128,]),'continue_instr':([0,2,18,36,59,68,75,120,121,129,130,144,145,],[1,1,1,1,1,1,1,1,1,1,1,1,1,]),'constructions':([0,],[2,]),'break_instr':([0,2,18,36,59,68,75,120,121,129,130,144,145,],[27,27,27,27,27,27,27,27,27,27,27,27,27,]),'instruction':([0,2,18,36,59,68,75,120,121,129,130,144,145,],[7,7,60,60,100,112,100,135,136,141,142,148,149,]),'expr_list_or_empty':([67,],[109,]),'fundef':([0,2,],[3,3,]),'args_list':([102,],[123,]),'condition':([37,65,101,],[78,106,122,]),'instructions':([18,36,],[59,75,]),'expression_id':([0,2,9,18,31,32,36,37,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,65,67,68,69,75,101,103,120,121,129,130,133,144,145,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'inits':([19,76,],[63,63,]),'declarations':([4,],[36,]),'compound_instr':([0,2,18,36,59,68,75,120,121,129,130,140,144,145,],[21,21,21,21,21,21,21,21,21,21,21,147,21,21,]),'assignment':([0,2,18,36,59,68,75,120,121,129,130,144,145,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'declaration':([0,2,36,],[24,24,77,]),'while_instr':([0,2,18,36,59,68,75,120,121,129,130,144,145,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'const':([0,2,9,18,31,32,36,37,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,65,67,68,69,75,101,103,120,121,129,130,133,144,145,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'expr_list':([67,],[111,]),'return_instr':([0,2,18,36,59,68,75,120,121,129,130,144,145,],[26,26,26,26,26,26,26,26,26,26,26,26,26,]),'args_list_or_empty':([102,],[125,]),'expression':([0,2,9,18,31,32,36,37,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,65,67,68,69,75,101,103,120,121,129,130,133,144,145,],[13,13,39,13,70,72,13,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,13,79,108,13,113,13,79,127,13,13,13,13,143,13,13,]),'repeat_instr':([0,2,18,36,59,68,75,120,121,129,130,144,145,],[29,29,29,29,29,29,29,29,29,29,29,29,29,]),'construction':([0,2,],[14,35,]),'print_instr':([0,2,18,36,59,68,75,120,121,129,130,144,145,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'arg':([102,138,],[126,146,]),'program':([0,],[16,]),'labeled_instr':([0,2,18,36,59,68,75,120,121,129,130,144,145,],[17,17,17,17,17,17,17,17,17,17,17,17,17,]),'choice_instr':([0,2,18,36,59,68,75,120,121,129,130,144,145,],[25,25,25,25,25,25,25,25,25,25,25,25,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> constructions','program',1,'p_program','Cparser.py',38),
  ('program -> <empty>','program',0,'p_program','Cparser.py',39),
  ('constructions -> constructions construction','constructions',2,'p_constructions','Cparser.py',43),
  ('constructions -> construction','constructions',1,'p_constructions','Cparser.py',44),
  ('construction -> declaration','construction',1,'p_construction','Cparser.py',54),
  ('construction -> fundef','construction',1,'p_construction','Cparser.py',55),
  ('construction -> instruction','construction',1,'p_construction','Cparser.py',56),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',60),
  ('declarations -> <empty>','declarations',0,'p_declarations','Cparser.py',61),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',75),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',76),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',80),
  ('inits -> init','inits',1,'p_inits','Cparser.py',81),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',94),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',99),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',100),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',111),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',112),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',113),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',114),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',115),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',116),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',117),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',118),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',119),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',120),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',121),
  ('print_instr -> PRINT expression ;','print_instr',3,'p_print_instr','Cparser.py',125),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',126),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',130),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',134),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',138),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',139),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',140),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',141),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',149),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',150),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',154),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',158),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',162),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',166),
  ('compound_instr -> { declarations instructions }','compound_instr',4,'p_compound_instr','Cparser.py',170),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',174),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',178),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',179),
  ('const -> STRING','const',1,'p_const','Cparser.py',180),
  ('expression_id -> ID','expression_id',1,'p_expression_id','Cparser.py',189),
  ('expression -> const','expression',1,'p_expression','Cparser.py',193),
  ('expression -> expression_id','expression',1,'p_expression','Cparser.py',194),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',195),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',196),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',197),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',198),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',199),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',200),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',201),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',202),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',203),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',204),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',205),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',206),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',207),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',208),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',209),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',210),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',211),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',212),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',213),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',214),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',215),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',216),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',231),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',232),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',236),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',237),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',248),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',252),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',253),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',257),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',258),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',271),
]
