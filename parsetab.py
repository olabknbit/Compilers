
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '78C3BEE8BC1D105E8465C050F6F70FAF'
    
_lr_action_items = {'AND':([12,15,17,22,25,28,32,41,42,64,71,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,123,128,130,141,],[47,-48,-47,-44,-49,-45,-46,-47,47,47,47,-68,-69,47,-57,-64,-58,-61,-51,-50,-60,-62,47,-63,-55,-52,-54,-53,-65,-56,-66,-67,47,47,47,-70,-71,47,]),'EQ':([12,15,17,22,25,28,32,41,42,64,71,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,123,128,130,141,],[52,-48,-47,-44,-49,-45,-46,-47,52,52,52,-68,-69,52,52,None,52,-61,-51,-50,-60,None,52,None,52,-52,-54,-53,None,52,None,None,52,52,52,-70,-71,52,]),'REPEAT':([0,1,3,4,6,7,8,9,13,16,19,20,21,24,29,30,33,34,35,36,40,56,65,69,70,73,74,76,79,104,105,113,115,116,117,126,127,131,132,133,134,135,139,140,142,143,144,146,147,148,149,],[1,1,-18,-4,-24,-6,-5,-26,-23,-21,-9,-17,-25,-22,-20,-7,-19,1,1,-16,-40,-27,1,1,-41,-11,-3,-15,-10,-39,-30,1,-8,-28,-29,1,1,-31,1,1,-42,-38,-36,-37,-32,-34,-76,1,1,-33,-35,]),'ELSE':([3,6,9,13,16,20,21,24,29,33,40,56,70,104,105,116,117,131,134,135,139,140,142,143,148,149,],[-18,-24,-26,-23,-21,-17,-25,-22,-20,-19,-40,-27,-41,-39,-30,-28,-29,-31,-42,-38,-36,-37,146,147,-33,-35,]),'+':([12,15,17,22,25,28,32,41,42,64,71,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,123,128,130,141,],[50,-48,-47,-44,-49,-45,-46,-47,50,50,50,-68,-69,50,50,50,50,50,-51,-50,50,50,50,50,50,-52,-54,-53,50,50,50,50,50,50,50,-70,-71,50,]),'ID':([0,1,2,3,4,6,7,8,9,10,13,14,16,19,20,21,24,27,29,30,33,34,35,36,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,73,74,75,76,78,79,80,104,105,113,114,115,116,117,122,126,127,129,131,132,133,134,135,139,140,142,143,144,146,147,148,149,],[17,17,38,-18,-4,-24,-6,-5,-26,41,-23,41,-21,-9,-17,-25,-22,41,-20,-7,-19,17,17,-16,-40,41,41,41,41,41,41,41,41,41,41,41,41,-27,41,41,41,41,41,41,41,17,41,41,41,17,-41,-11,-3,41,-15,41,-10,125,-39,-30,17,125,-8,-28,-29,138,17,17,41,-31,17,17,-42,-38,-36,-37,-32,-34,-76,17,17,-33,-35,]),'=':([17,38,125,],[67,78,78,]),'TYPE':([0,3,4,6,7,8,9,13,16,19,20,21,24,29,30,33,34,40,56,69,70,73,74,77,79,104,105,115,116,117,131,134,135,137,139,140,142,143,144,148,149,],[2,-18,-4,-24,-6,-5,-26,-23,-21,-9,-17,-25,-22,-20,-7,-19,2,-40,-27,114,-41,-11,-3,122,-10,-39,-30,-8,-28,-29,-31,-42,-38,122,-36,-37,-32,-34,-76,-33,-35,]),'OR':([12,15,17,22,25,28,32,41,42,64,71,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,123,128,130,141,],[53,-48,-47,-44,-49,-45,-46,-47,53,53,53,-68,-69,53,-57,-64,-58,-61,-51,-50,-60,-62,-59,-63,-55,-52,-54,-53,-65,-56,-66,-67,53,53,53,-70,-71,53,]),';':([5,12,15,17,22,25,26,28,31,32,37,39,41,64,71,72,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,110,118,123,124,128,130,],[40,56,-48,-47,-44,-49,70,-45,73,-46,-13,79,-47,104,116,117,-68,-69,-43,-57,-64,-58,-61,-51,-50,-60,-62,-59,-63,-55,-52,-54,-53,-65,-56,-66,-67,131,135,-14,-12,-70,-71,]),'}':([3,6,9,13,16,20,21,24,29,33,36,40,56,70,76,104,105,113,116,117,131,134,135,139,140,142,143,148,149,],[-18,-24,-26,-23,-21,-17,-25,-22,-20,-19,-16,-40,-27,-41,-15,-39,-30,134,-28,-29,-31,-42,-38,-36,-37,-32,-34,-33,-35,]),'*':([12,15,17,22,25,28,32,41,42,64,71,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,123,128,130,141,],[57,-48,-47,-44,-49,-45,-46,-47,57,57,57,-68,-69,57,57,57,57,57,57,57,57,57,57,57,57,-52,-54,-53,57,57,57,57,57,57,57,-70,-71,57,]),'FLOAT':([0,1,3,4,6,7,8,9,10,13,14,16,19,20,21,24,27,29,30,33,34,35,36,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,73,74,75,76,78,79,104,105,113,115,116,117,126,127,129,131,132,133,134,135,139,140,142,143,144,146,147,148,149,],[28,28,-18,-4,-24,-6,-5,-26,28,-23,28,-21,-9,-17,-25,-22,28,-20,-7,-19,28,28,-16,-40,28,28,28,28,28,28,28,28,28,28,28,28,-27,28,28,28,28,28,28,28,28,28,28,28,28,-41,-11,-3,28,-15,28,-10,-39,-30,28,-8,-28,-29,28,28,28,-31,28,28,-42,-38,-36,-37,-32,-34,-76,28,28,-33,-35,]),'BREAK':([0,1,3,4,6,7,8,9,13,16,19,20,21,24,29,30,33,34,35,36,40,56,65,69,70,73,74,76,79,104,105,113,115,116,117,126,127,131,132,133,134,135,139,140,142,143,144,146,147,148,149,],[26,26,-18,-4,-24,-6,-5,-26,-23,-21,-9,-17,-25,-22,-20,-7,-19,26,26,-16,-40,-27,26,26,-41,-11,-3,-15,-10,-39,-30,26,-8,-28,-29,26,26,-31,26,26,-42,-38,-36,-37,-32,-34,-76,26,26,-33,-35,]),'&':([12,15,17,22,25,28,32,41,42,64,71,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,123,128,130,141,],[61,-48,-47,-44,-49,-45,-46,-47,61,61,61,-68,-69,61,61,-64,61,-61,-51,-50,-60,-62,61,-63,61,-52,-54,-53,-65,-56,-66,-67,61,61,61,-70,-71,61,]),'LE':([12,15,17,22,25,28,32,41,42,64,71,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,123,128,130,141,],[62,-48,-47,-44,-49,-45,-46,-47,62,62,62,-68,-69,62,62,None,62,-61,-51,-50,-60,None,62,None,62,-52,-54,-53,None,62,None,None,62,62,62,-70,-71,62,]),'SHR':([12,15,17,22,25,28,32,41,42,64,71,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,123,128,130,141,],[48,-48,-47,-44,-49,-45,-46,-47,48,48,48,-68,-69,48,48,48,48,-61,-51,-50,-60,48,48,48,48,-52,-54,-53,48,48,48,48,48,48,48,-70,-71,48,]),'^':([12,15,17,22,25,28,32,41,42,64,71,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,123,128,130,141,],[45,-48,-47,-44,-49,-45,-46,-47,45,45,45,-68,-69,45,-57,-64,45,-61,-51,-50,-60,-62,45,-63,45,-52,-54,-53,-65,-56,-66,-67,45,45,45,-70,-71,45,]),'UNTIL':([3,6,9,13,16,20,21,24,29,33,35,36,40,56,70,76,104,105,116,117,131,134,135,139,140,142,143,148,149,],[-18,-24,-26,-23,-21,-17,-25,-22,-20,-19,75,-16,-40,-27,-41,-15,-39,-30,-28,-29,-31,-42,-38,-36,-37,-32,-34,-33,-35,]),'GE':([12,15,17,22,25,28,32,41,42,64,71,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,123,128,130,141,],[63,-48,-47,-44,-49,-45,-46,-47,63,63,63,-68,-69,63,63,None,63,-61,-51,-50,-60,None,63,None,63,-52,-54,-53,None,63,None,None,63,63,63,-70,-71,63,]),':':([17,],[65,]),'(':([0,1,3,4,6,7,8,9,10,11,13,14,16,17,18,19,20,21,24,27,29,30,33,34,35,36,38,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,73,74,75,76,78,79,104,105,113,115,116,117,126,127,129,131,132,133,134,135,139,140,142,143,144,146,147,148,149,],[10,10,-18,-4,-24,-6,-5,-26,10,44,-23,10,-21,66,68,-9,-17,-25,-22,10,-20,-7,-19,10,10,-16,77,-40,66,10,10,10,10,10,10,10,10,10,10,10,10,-27,10,10,10,10,10,10,10,10,10,10,10,10,-41,-11,-3,10,-15,10,-10,-39,-30,10,-8,-28,-29,10,10,10,-31,10,10,-42,-38,-36,-37,-32,-34,-76,10,10,-33,-35,]),'>':([12,15,17,22,25,28,32,41,42,64,71,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,123,128,130,141,],[46,-48,-47,-44,-49,-45,-46,-47,46,46,46,-68,-69,46,46,None,46,-61,-51,-50,-60,None,46,None,46,-52,-54,-53,None,46,None,None,46,46,46,-70,-71,46,]),'/':([12,15,17,22,25,28,32,41,42,64,71,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,123,128,130,141,],[59,-48,-47,-44,-49,-45,-46,-47,59,59,59,-68,-69,59,59,59,59,59,59,59,59,59,59,59,59,-52,-54,-53,59,59,59,59,59,59,59,-70,-71,59,]),'WHILE':([0,1,3,4,6,7,8,9,13,16,19,20,21,24,29,30,33,34,35,36,40,56,65,69,70,73,74,76,79,104,105,113,115,116,117,126,127,131,132,133,134,135,139,140,142,143,144,146,147,148,149,],[11,11,-18,-4,-24,-6,-5,-26,-23,-21,-9,-17,-25,-22,-20,-7,-19,11,11,-16,-40,-27,11,11,-41,-11,-3,-15,-10,-39,-30,11,-8,-28,-29,11,11,-31,11,11,-42,-38,-36,-37,-32,-34,-76,11,11,-33,-35,]),'-':([12,15,17,22,25,28,32,41,42,64,71,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,123,128,130,141,],[49,-48,-47,-44,-49,-45,-46,-47,49,49,49,-68,-69,49,49,49,49,49,-51,-50,49,49,49,49,49,-52,-54,-53,49,49,49,49,49,49,49,-70,-71,49,]),'$end':([0,3,4,6,7,8,9,13,16,20,21,23,24,29,30,33,34,40,56,70,73,74,79,104,105,116,117,131,134,135,139,140,142,143,144,148,149,],[-2,-18,-4,-24,-6,-5,-26,-23,-21,-17,-25,0,-22,-20,-7,-19,-1,-40,-27,-41,-11,-3,-10,-39,-30,-28,-29,-31,-42,-38,-36,-37,-32,-34,-76,-33,-35,]),'PRINT':([0,1,3,4,6,7,8,9,13,16,19,20,21,24,29,30,33,34,35,36,40,56,65,69,70,73,74,76,79,104,105,113,115,116,117,126,127,131,132,133,134,135,139,140,142,143,144,146,147,148,149,],[27,27,-18,-4,-24,-6,-5,-26,-23,-21,-9,-17,-25,-22,-20,-7,-19,27,27,-16,-40,-27,27,27,-41,-11,-3,-15,-10,-39,-30,27,-8,-28,-29,27,27,-31,27,27,-42,-38,-36,-37,-32,-34,-76,27,27,-33,-35,]),'NEQ':([12,15,17,22,25,28,32,41,42,64,71,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,123,128,130,141,],[54,-48,-47,-44,-49,-45,-46,-47,54,54,54,-68,-69,54,54,None,54,-61,-51,-50,-60,None,54,None,54,-52,-54,-53,None,54,None,None,54,54,54,-70,-71,54,]),'|':([12,15,17,22,25,28,32,41,42,64,71,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,123,128,130,141,],[55,-48,-47,-44,-49,-45,-46,-47,55,55,55,-68,-69,55,-57,-64,55,-61,-51,-50,-60,-62,55,-63,-55,-52,-54,-53,-65,-56,-66,-67,55,55,55,-70,-71,55,]),'CONTINUE':([0,1,3,4,6,7,8,9,13,16,19,20,21,24,29,30,33,34,35,36,40,56,65,69,70,73,74,76,79,104,105,113,115,116,117,126,127,131,132,133,134,135,139,140,142,143,144,146,147,148,149,],[5,5,-18,-4,-24,-6,-5,-26,-23,-21,-9,-17,-25,-22,-20,-7,-19,5,5,-16,-40,-27,5,5,-41,-11,-3,-15,-10,-39,-30,5,-8,-28,-29,5,5,-31,5,5,-42,-38,-36,-37,-32,-34,-76,5,5,-33,-35,]),'RETURN':([0,1,3,4,6,7,8,9,13,16,19,20,21,24,29,30,33,34,35,36,40,56,65,69,70,73,74,76,79,104,105,113,115,116,117,126,127,131,132,133,134,135,139,140,142,143,144,146,147,148,149,],[14,14,-18,-4,-24,-6,-5,-26,-23,-21,-9,-17,-25,-22,-20,-7,-19,14,14,-16,-40,-27,14,14,-41,-11,-3,-15,-10,-39,-30,14,-8,-28,-29,14,14,-31,14,14,-42,-38,-36,-37,-32,-34,-76,14,14,-33,-35,]),'%':([12,15,17,22,25,28,32,41,42,64,71,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,123,128,130,141,],[58,-48,-47,-44,-49,-45,-46,-47,58,58,58,-68,-69,58,58,58,58,58,58,58,58,58,58,58,58,-52,-54,-53,58,58,58,58,58,58,58,-70,-71,58,]),'error':([0,3,4,6,7,8,9,10,13,16,19,20,21,24,27,29,30,33,34,40,44,56,66,68,69,70,73,74,79,104,105,115,116,117,131,134,135,139,140,142,143,144,148,149,],[31,-18,-4,-24,-6,-5,-26,43,-23,-21,-9,-17,-25,-22,72,-20,-7,-19,31,-40,85,-27,109,112,31,-41,-11,-3,-10,-39,-30,-8,-28,-29,-31,-42,-38,-36,-37,-32,-34,-76,-33,-35,]),'<':([12,15,17,22,25,28,32,41,42,64,71,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,123,128,130,141,],[60,-48,-47,-44,-49,-45,-46,-47,60,60,60,-68,-69,60,60,None,60,-61,-51,-50,-60,None,60,None,60,-52,-54,-53,None,60,None,None,60,60,60,-70,-71,60,]),'IF':([0,1,3,4,6,7,8,9,13,16,19,20,21,24,29,30,33,34,35,36,40,56,65,69,70,73,74,76,79,104,105,113,115,116,117,126,127,131,132,133,134,135,139,140,142,143,144,146,147,148,149,],[18,18,-18,-4,-24,-6,-5,-26,-23,-21,-9,-17,-25,-22,-20,-7,-19,18,18,-16,-40,-27,18,18,-41,-11,-3,-15,-10,-39,-30,18,-8,-28,-29,18,18,-31,18,18,-42,-38,-36,-37,-32,-34,-76,18,18,-33,-35,]),'{':([0,1,3,4,6,7,8,9,13,16,19,20,21,24,29,30,33,34,35,36,40,56,65,69,70,73,74,76,79,104,105,113,115,116,117,126,127,131,132,133,134,135,136,139,140,142,143,144,146,147,148,149,],[19,19,-18,-4,-24,-6,-5,-26,-23,-21,-9,-17,-25,-22,-20,-7,-19,19,19,-16,-40,-27,19,19,-41,-11,-3,-15,-10,-39,-30,19,-8,-28,-29,19,19,-31,19,19,-42,-38,19,-36,-37,-32,-34,-76,19,19,-33,-35,]),',':([15,22,25,28,32,37,39,41,81,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,108,120,121,123,124,128,130,138,141,145,],[-48,-44,-49,-45,-46,-13,80,-47,-68,-69,-57,-64,-58,-61,-51,-50,-60,-62,-59,-63,-55,-52,-54,-53,-65,-56,-66,-67,129,-75,-80,137,-14,-12,-70,-71,-81,-74,-79,]),'STRING':([0,1,3,4,6,7,8,9,10,13,14,16,19,20,21,24,27,29,30,33,34,35,36,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,73,74,75,76,78,79,104,105,113,115,116,117,126,127,129,131,132,133,134,135,139,140,142,143,144,146,147,148,149,],[32,32,-18,-4,-24,-6,-5,-26,32,-23,32,-21,-9,-17,-25,-22,32,-20,-7,-19,32,32,-16,-40,32,32,32,32,32,32,32,32,32,32,32,32,-27,32,32,32,32,32,32,32,32,32,32,32,32,-41,-11,-3,32,-15,32,-10,-39,-30,32,-8,-28,-29,32,32,32,-31,32,32,-42,-38,-36,-37,-32,-34,-76,32,32,-33,-35,]),'SHL':([12,15,17,22,25,28,32,41,42,64,71,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,123,128,130,141,],[51,-48,-47,-44,-49,-45,-46,-47,51,51,51,-68,-69,51,51,51,51,-61,-51,-50,-60,51,51,51,51,-52,-54,-53,51,51,51,51,51,51,51,-70,-71,51,]),')':([15,22,25,28,32,41,42,43,66,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,111,112,119,120,121,128,130,138,141,145,],[-48,-44,-49,-45,-46,-47,81,82,-73,-78,-68,-69,126,-43,127,-57,-64,-58,-61,-51,-50,-60,-62,-59,-63,-55,-52,-54,-53,-65,-56,-66,-67,128,-72,-75,130,132,133,136,-80,-77,-70,-71,-81,-74,-79,]),'INTEGER':([0,1,3,4,6,7,8,9,10,13,14,16,19,20,21,24,27,29,30,33,34,35,36,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,73,74,75,76,78,79,104,105,113,115,116,117,126,127,129,131,132,133,134,135,139,140,142,143,144,146,147,148,149,],[22,22,-18,-4,-24,-6,-5,-26,22,-23,22,-21,-9,-17,-25,-22,22,-20,-7,-19,22,22,-16,-40,22,22,22,22,22,22,22,22,22,22,22,22,-27,22,22,22,22,22,22,22,22,22,22,22,22,-41,-11,-3,22,-15,22,-10,-39,-30,22,-8,-28,-29,22,22,22,-31,22,22,-42,-38,-36,-37,-32,-34,-76,22,22,-33,-35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instructions':([1,69,],[35,113,]),'init':([2,80,114,],[37,124,37,]),'program':([0,],[23,]),'declarations':([19,],[69,]),'repeat_instr':([0,1,34,35,65,69,113,126,127,132,133,146,147,],[24,24,24,24,24,24,24,24,24,24,24,24,24,]),'construction':([0,34,],[4,74,]),'expression_id':([0,1,10,14,27,34,35,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,65,66,67,68,69,75,78,113,126,127,129,132,133,146,147,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'inits':([2,114,],[39,39,]),'fundef':([0,34,],[7,7,]),'condition':([44,68,75,],[83,111,118,]),'declaration':([0,34,69,],[8,8,115,]),'expr_list_or_empty':([66,],[106,]),'while_instr':([0,1,34,35,65,69,113,126,127,132,133,146,147,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'expr_list':([66,],[107,]),'compound_instr':([0,1,34,35,65,69,113,126,127,132,133,136,146,147,],[9,9,9,9,9,9,9,9,9,9,9,144,9,9,]),'assignment':([0,1,34,35,65,69,113,126,127,132,133,146,147,],[33,33,33,33,33,33,33,33,33,33,33,33,33,]),'continue_instr':([0,1,34,35,65,69,113,126,127,132,133,146,147,],[21,21,21,21,21,21,21,21,21,21,21,21,21,]),'expression':([0,1,10,14,27,34,35,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,65,66,67,68,69,75,78,113,126,127,129,132,133,146,147,],[12,12,42,64,71,12,12,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,12,108,110,84,12,84,123,12,12,12,141,12,12,12,12,]),'break_instr':([0,1,34,35,65,69,113,126,127,132,133,146,147,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'args_list_or_empty':([77,],[119,]),'return_instr':([0,1,34,35,65,69,113,126,127,132,133,146,147,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'choice_instr':([0,1,34,35,65,69,113,126,127,132,133,146,147,],[29,29,29,29,29,29,29,29,29,29,29,29,29,]),'labeled_instr':([0,1,34,35,65,69,113,126,127,132,133,146,147,],[3,3,3,3,3,3,3,3,3,3,3,3,3,]),'instruction':([0,1,34,35,65,69,113,126,127,132,133,146,147,],[30,36,30,76,105,36,76,139,140,142,143,148,149,]),'arg':([77,137,],[120,145,]),'args_list':([77,],[121,]),'print_instr':([0,1,34,35,65,69,113,126,127,132,133,146,147,],[20,20,20,20,20,20,20,20,20,20,20,20,20,]),'constructions':([0,],[34,]),'const':([0,1,10,14,27,34,35,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,65,66,67,68,69,75,78,113,126,127,129,132,133,146,147,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> constructions','program',1,'p_program','Cparser.py',38),
  ('program -> <empty>','program',0,'p_program','Cparser.py',39),
  ('constructions -> constructions construction','constructions',2,'p_constructions','Cparser.py',43),
  ('constructions -> construction','constructions',1,'p_constructions','Cparser.py',44),
  ('construction -> declaration','construction',1,'p_construction','Cparser.py',54),
  ('construction -> fundef','construction',1,'p_construction','Cparser.py',55),
  ('construction -> instruction','construction',1,'p_construction','Cparser.py',56),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',60),
  ('declarations -> <empty>','declarations',0,'p_declarations','Cparser.py',61),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',75),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',76),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',80),
  ('inits -> init','inits',1,'p_inits','Cparser.py',81),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',94),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',99),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',100),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',111),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',112),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',113),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',114),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',115),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',116),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',117),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',118),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',119),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',120),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',121),
  ('print_instr -> PRINT expression ;','print_instr',3,'p_print_instr','Cparser.py',125),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',126),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',130),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',134),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',138),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',139),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',140),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',141),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',149),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',150),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',154),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',158),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',162),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',166),
  ('compound_instr -> { declarations instructions }','compound_instr',4,'p_compound_instr','Cparser.py',170),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',174),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',178),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',179),
  ('const -> STRING','const',1,'p_const','Cparser.py',180),
  ('expression_id -> ID','expression_id',1,'p_expression_id','Cparser.py',189),
  ('expression -> const','expression',1,'p_expression','Cparser.py',193),
  ('expression -> expression_id','expression',1,'p_expression','Cparser.py',194),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',195),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',196),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',197),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',198),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',199),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',200),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',201),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',202),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',203),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',204),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',205),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',206),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',207),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',208),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',209),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',210),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',211),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',212),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',213),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',214),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',215),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',216),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',231),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',232),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',236),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',237),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',248),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',252),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',253),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',257),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',258),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',271),
]
